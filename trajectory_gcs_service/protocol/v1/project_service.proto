syntax = "proto3";

package trajectory.trajectory_gcs_service.protocol.v1;
option go_package = "github.com/trajectoryjp/trjx_api_service/trajectory_gcs";

service ProjectService {
    // [BE] ADMIN : ADD Project [A] -> Create Project
    rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse);

    // [BE] ADMIN : Delete Project [A]
    rpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse);

    // [BE] RS : Get KML Project [O/R]
    rpc GetKmlProject(GetKmlProjectRequest) returns (GetKmlProjectResponse);

    // [BE] NEW RS : Get Projects [O/R]
    rpc GetProjects(GetProjectsRequest) returns (GetProjectsResponse);

    // [BE] Collabo : : Get Users in the project [O]
    rpc GetUsersInProject(GetUsersInProjectRequest) returns (GetUsersInProjectResponse);

    // [BE] RS : Update Projects
    rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse);
}

// Common messages
message Project { // BE: data
    int32                  project_id = 1;
    string                 project_name = 2;
    ProjectServicePosition position = 3;
    ProjectServicePosition base = 4;
    int32                  width = 5;
    int32                  length = 6;
    ProjectServicePosition diagonal = 7;
    ProjectServicePosition dir = 8;
    int32                  project_attr = 9;
    string                 server_url = 10;
    string                 database_type = 11;
}

message ProjectServicePosition {
    double latitude = 1;
    double longitude = 2;
    double altitude = 3;
}

message ProjectServiceUser {
    string user_id = 1;
    string uav_id = 2;
    string name = 3;
    bool   safety = 4;
}

// CreateProject messages
message CreateProjectRequest {
    string                 project_name = 1;
    ProjectServicePosition position = 2;
    ProjectServicePosition base = 3;
    int32                  output_altitude = 4; // 0: ellipsoid, 1: relative, 2: AGL, 3: MSL
}

message CreateProjectResponse {
    int32                  project_id = 1;
    ProjectServicePosition position = 2;
    ProjectServicePosition base = 3;
    int32                  width = 4;
    int32                  length = 5;
    ProjectServicePosition diagonal = 6;
    ProjectServicePosition dir = 7;
}

message CreateProjectErrorResponse {
    int32  error = 1;
    string info = 2;
}

// DeleteProject messages
message DeleteProjectRequest {
    int32 project_id = 1;
}

message DeleteProjectResponse {
    string status = 1;
}

// GetKmlProject messages
message GetKmlProjectRequest {
    int32 project_id = 1;
    bool  area = 2;
    bool  off_limit = 3;
    bool  dem = 4;
    bool  building = 5;
    bool  base_point = 6;
}

message GetKmlProjectResponse {
    string kml = 1;
}

message GetKmlProjectErrorResponse {
    int32  error = 1;
    string info = 2;
}

// GetProjects messages
message GetProjectsRequest {
    string user_id = 1;
}

message GetProjectsResponse {
    repeated Project projects = 1;
    int32            limit = 2;
    int32            default_width = 3;
    int32            default_length = 4;
}

// UpdateProjects messages
message UpdateProjectRequest {
    int32  project_id = 1;
    string database_type = 2;
}

message UpdateProjectResponse {
    int32 status = 1;
}

// GetUsersInProject messages
message GetUsersInProjectRequest {
    int32 project_id = 1;
}

message GetUsersInProjectResponse { 
	repeated ProjectServiceUser users = 1;
}
