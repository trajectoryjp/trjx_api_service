syntax = "proto3";

package trajectory.trajectory_gcs_service.protocol.v1;
option go_package = "github.com/trajectoryjp/trjx_api_service/trajectory_gcs";
import "github.com/trajectoryjp/trjx_api_service/trajectory_gcs_service/protocol/v1/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// Sitl service
service SitlService {
    // SITLを開始し, SITLの延長をする
    // SITLの権限を持っている必要があります
    rpc StartSitl(StartSitlRequest) returns (StartSitlResponse);
    // SITLアラートの購読を開始します
    // UAVIDを指定しない場合、組織内のすべてのアラートを受信します。
    // SITLの権限を持っている必要はありません, 組織内のすべてのユーザーが購読できます
    rpc SubscribeToSitlAlerts(SubscribeToSitlAlertsRequest) returns (stream SitlAlert);
    // SITLを停止します
    // SITLの権限を持っている必要があります
    rpc StopSitl(StopSitlRequest) returns (StopSitlResponse);
    // ユーザーの組織内のすべてのアクティブなSITLインスタンスを返します
    // SITLの権限を持っている必要があります
    rpc CheckSitl(CheckSitlRequest) returns (CheckSitlResponse);
}


// StartSitlのrequest
message StartSitlRequest {
    // UAVのID
    int32 uav_id = 1;
    // UAVの位置
    Position position = 2;
}

message StartSitlResponse {
    // StartSitl ステータス
    // 1 = 開始
    // 2 = 拡張
    int32 status = 1;
}

// SubscribeToSitlAlertsのrequest
message SubscribeToSitlAlertsRequest {
    // UAVID指定しない場合、組織内のすべてのアラートを受信します。
    // UAVのID
    optional int32 uav_id = 1; 
}

// Sitl alert event
message SitlAlert {
    // UAVのID
    int32 uav_id = 1;
    // SITLアラートの状態
    // 1 = 有効期限の警告。SITLは指定された時刻に停止します。
    // 2 = 有効期限切れ。SITLは停止しました。
    int32 state = 2;
    // SITLの有効期限が切れる時刻（（秒単位で）
    // stateが1（有効期限の警告）の場合にのみ意味を持ちます。
    int64 time = 3;
}

// StopSitlのrequest
message StopSitlRequest {
    // UAVのID
    int32 uav_id = 1;
}

message StopSitlResponse {
    // すべて正常に停止した場合は "ok" を返します。
    string status = 1;
}

// CheckSitlのrequest
message CheckSitlRequest {}

// アクティブなSITLインスタンス
message ActiveSitl {
    // ユーザーID
    UserID user_id = 1;
    // 組織ID
    int32 organization_id = 2;
    // UAVのID
    int32 uav_id = 3;
    // SITLの開始時刻
    int64 start_time = 4;
    // SITLの有効期限切れアラートがトリガーされたかどうかを示します。
    bool alerted = 5;
    // SITLの位置
    Position position = 6;
}


// CheckSitlのresponse
message CheckSitlResponse {
    // Active Sitl instances
    // アクティブなSITLインスタンスのリスト
    repeated ActiveSitl sitls = 1;
}