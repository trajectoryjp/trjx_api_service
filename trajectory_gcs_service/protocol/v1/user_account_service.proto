syntax = "proto3";

package trajectory.trajectory_gcs_service.protocol.v1;
option go_package = "github.com/trajectoryjp/trjx_api_service/trajectory_gcs";

import "google/protobuf/empty.proto";

// 403 [PERMISSION_DENIED]　権限が無い場合

service UserAccountService {

    // GetUserPermission
    // アクセス権限: admin, operator
    rpc GetUserPermission(google.protobuf.Empty) returns (UserPermission) {}

    // ListUserPermissions
    // アクセス権限: admin, operator
    rpc ListUserPermissions(google.protobuf.Empty) returns (ListUserPermissionsResponse) {}

    // UpdateUserPermission
    // アクセス権限: admin
    // Updateは全更新
    rpc UpdateUserPermission(UserPermissionWithName) returns (UserPermissionWithName) {}
}

message UserPermission {
    bool admin = 1;  // 管理者権限
    bool operator = 2; // 操縦者権限
    bool map_selectable = 3;  // 地図表示の選択権限。falseの場合、set_user_configsでprivate_setting=false指定不可（エラー。マップ表示していないのでprivate_setting=falseの設定も許容しない）
    bool save_setting = 4;  // 地図表示設定の保存権限
    bool movie = 5;  // 動画の閲覧権限
    bool drone_auth = 6;  // SITL（ドローンシミュレータ）の操縦者権限
    bool sitl_auth = 7;
    bool ladder_auth = 8;
    bool tile_auth = 9;
    bool video_auth = 11;
    bool video_user = 12;
    bool system_api_access = 14;
    bool spatial_manegement = 15;
    bool public_spatial_maneger = 16;
    bool private_spatial_maneger = 17;
}

message UserPermissionWithName {
    string user_id = 1;
    UserPermission user_Permission = 2;
}

message ListUserPermissionsResponse {
    repeated UserPermissionWithName user_permission_with_name_list = 1;
}