// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: trajectory/trajectory_gcs_service/protocol/v1/resource.proto

package trajectory_gcs

import (
	spatial "github.com/trajectoryjp/trjx_api_service/spatial"
	_type "github.com/trajectoryjp/trjx_api_service/type"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionAttribute int32

const (
	TransactionAttribute_NARROW TransactionAttribute = 0
	TransactionAttribute_WIDE   TransactionAttribute = 1
)

// Enum value maps for TransactionAttribute.
var (
	TransactionAttribute_name = map[int32]string{
		0: "NARROW",
		1: "WIDE",
	}
	TransactionAttribute_value = map[string]int32{
		"NARROW": 0,
		"WIDE":   1,
	}
)

func (x TransactionAttribute) Enum() *TransactionAttribute {
	p := new(TransactionAttribute)
	*p = x
	return p
}

func (x TransactionAttribute) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionAttribute) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[0].Descriptor()
}

func (TransactionAttribute) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[0]
}

func (x TransactionAttribute) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionAttribute.Descriptor instead.
func (TransactionAttribute) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{0}
}

type PortInterval int32

const (
	PortInterval_PORT_INTERVAL_TAKEOFF PortInterval = 0 // 離陸ポート(TakeOff) default
	PortInterval_PORT_INTERVAL_LANDING PortInterval = 1 // 着陸ポート(Landing)
)

// Enum value maps for PortInterval.
var (
	PortInterval_name = map[int32]string{
		0: "PORT_INTERVAL_TAKEOFF",
		1: "PORT_INTERVAL_LANDING",
	}
	PortInterval_value = map[string]int32{
		"PORT_INTERVAL_TAKEOFF": 0,
		"PORT_INTERVAL_LANDING": 1,
	}
)

func (x PortInterval) Enum() *PortInterval {
	p := new(PortInterval)
	*p = x
	return p
}

func (x PortInterval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortInterval) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[1].Descriptor()
}

func (PortInterval) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[1]
}

func (x PortInterval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortInterval.Descriptor instead.
func (PortInterval) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{1}
}

// 飛行計画の予約方式
type PlanReservationMethod int32

const (
	PlanReservationMethod_PLAN_METHOD_RECOMMEND PlanReservationMethod = 0 // TRJX推奨ルート(default)
	PlanReservationMethod_PLAN_METHOD_INPUTWP   PlanReservationMethod = 1 // 入力WP登録
)

// Enum value maps for PlanReservationMethod.
var (
	PlanReservationMethod_name = map[int32]string{
		0: "PLAN_METHOD_RECOMMEND",
		1: "PLAN_METHOD_INPUTWP",
	}
	PlanReservationMethod_value = map[string]int32{
		"PLAN_METHOD_RECOMMEND": 0,
		"PLAN_METHOD_INPUTWP":   1,
	}
)

func (x PlanReservationMethod) Enum() *PlanReservationMethod {
	p := new(PlanReservationMethod)
	*p = x
	return p
}

func (x PlanReservationMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlanReservationMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[2].Descriptor()
}

func (PlanReservationMethod) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[2]
}

func (x PlanReservationMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlanReservationMethod.Descriptor instead.
func (PlanReservationMethod) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{2}
}

// ルート区間
type RouteInterval int32

const (
	RouteInterval_ROUTE_INTERVAL_ROUTE   RouteInterval = 0 // 飛行ルート(default)
	RouteInterval_ROUTE_INTERVAL_TAKEOFF RouteInterval = 1 // 離陸ターミナルルート
	RouteInterval_ROUTE_INTERVAL_LANDING RouteInterval = 2 // 着陸ターミナルルート
)

// Enum value maps for RouteInterval.
var (
	RouteInterval_name = map[int32]string{
		0: "ROUTE_INTERVAL_ROUTE",
		1: "ROUTE_INTERVAL_TAKEOFF",
		2: "ROUTE_INTERVAL_LANDING",
	}
	RouteInterval_value = map[string]int32{
		"ROUTE_INTERVAL_ROUTE":   0,
		"ROUTE_INTERVAL_TAKEOFF": 1,
		"ROUTE_INTERVAL_LANDING": 2,
	}
)

func (x RouteInterval) Enum() *RouteInterval {
	p := new(RouteInterval)
	*p = x
	return p
}

func (x RouteInterval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouteInterval) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[3].Descriptor()
}

func (RouteInterval) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[3]
}

func (x RouteInterval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouteInterval.Descriptor instead.
func (RouteInterval) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{3}
}

type TransactionID_Attribute int32

const (
	TransactionID_SINGLE TransactionID_Attribute = 0 // 狭域
	TransactionID_WIDE   TransactionID_Attribute = 1 // 広域
)

// Enum value maps for TransactionID_Attribute.
var (
	TransactionID_Attribute_name = map[int32]string{
		0: "SINGLE",
		1: "WIDE",
	}
	TransactionID_Attribute_value = map[string]int32{
		"SINGLE": 0,
		"WIDE":   1,
	}
)

func (x TransactionID_Attribute) Enum() *TransactionID_Attribute {
	p := new(TransactionID_Attribute)
	*p = x
	return p
}

func (x TransactionID_Attribute) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionID_Attribute) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[4].Descriptor()
}

func (TransactionID_Attribute) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[4]
}

func (x TransactionID_Attribute) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionID_Attribute.Descriptor instead.
func (TransactionID_Attribute) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{0, 0}
}

type ExternalMission_Format int32

const (
	ExternalMission_TRJX_FORMAT     ExternalMission_Format = 0
	ExternalMission_LITCHI_FORMAT   ExternalMission_Format = 1
	ExternalMission_MAV_LINK_FORMAT ExternalMission_Format = 2
)

// Enum value maps for ExternalMission_Format.
var (
	ExternalMission_Format_name = map[int32]string{
		0: "TRJX_FORMAT",
		1: "LITCHI_FORMAT",
		2: "MAV_LINK_FORMAT",
	}
	ExternalMission_Format_value = map[string]int32{
		"TRJX_FORMAT":     0,
		"LITCHI_FORMAT":   1,
		"MAV_LINK_FORMAT": 2,
	}
)

func (x ExternalMission_Format) Enum() *ExternalMission_Format {
	p := new(ExternalMission_Format)
	*p = x
	return p
}

func (x ExternalMission_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalMission_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[5].Descriptor()
}

func (ExternalMission_Format) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[5]
}

func (x ExternalMission_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExternalMission_Format.Descriptor instead.
func (ExternalMission_Format) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{2, 0}
}

type MissionControllerResult_Status int32

const (
	MissionControllerResult_SATUS_UNSPECIFIED MissionControllerResult_Status = 0
	MissionControllerResult_CONTINUE          MissionControllerResult_Status = 5
	MissionControllerResult_END               MissionControllerResult_Status = 1 // 終了
	MissionControllerResult_COMPLETE          MissionControllerResult_Status = 2 // 完了
	MissionControllerResult_ERROR             MissionControllerResult_Status = 3
	MissionControllerResult_INTERNAL_ERRO     MissionControllerResult_Status = 9
	MissionControllerResult_ERROR_PARAMETER   MissionControllerResult_Status = 11 // UAVコマンドエラー
	// ErrorDuplicate = 12 ; // 指定したWPが重複
	MissionControllerResult_ERROR_UNSTABLE                     MissionControllerResult_Status = 13 // 飛行可能状態でない
	MissionControllerResult_ERROR_EMPTY_MISSION                MissionControllerResult_Status = 14 // 指定したミッションが空
	MissionControllerResult_ERROR_FC_BUSY                      MissionControllerResult_Status = 15 // FCがビジー
	MissionControllerResult_ERROR_FLIGHT_PATH_STRATA_CONFIG    MissionControllerResult_Status = 51 // FP9001
	MissionControllerResult_ERROR_FLIGHT_PATH_NOT_FOUND_AREA   MissionControllerResult_Status = 52 // FP9002
	MissionControllerResult_ERROR_FLIGHT_PATH_NOT_FOUND_MODEL  MissionControllerResult_Status = 53 // FP9003
	MissionControllerResult_ERROR_FLIGHT_PATH_OUT_OF_AREA      MissionControllerResult_Status = 54 // FP9004
	MissionControllerResult_ERROR_FLIGHT_PATH_ILLIGAL_POSITION MissionControllerResult_Status = 55 // FP9005
	MissionControllerResult_ERROR_COMMUNICATION_FC             MissionControllerResult_Status = 60 // FCとの通信エラー。Timeout含む。
	MissionControllerResult_ERRROR_FLIGHT_PATH_UNKNOWN         MissionControllerResult_Status = 50
)

// Enum value maps for MissionControllerResult_Status.
var (
	MissionControllerResult_Status_name = map[int32]string{
		0:  "SATUS_UNSPECIFIED",
		5:  "CONTINUE",
		1:  "END",
		2:  "COMPLETE",
		3:  "ERROR",
		9:  "INTERNAL_ERRO",
		11: "ERROR_PARAMETER",
		13: "ERROR_UNSTABLE",
		14: "ERROR_EMPTY_MISSION",
		15: "ERROR_FC_BUSY",
		51: "ERROR_FLIGHT_PATH_STRATA_CONFIG",
		52: "ERROR_FLIGHT_PATH_NOT_FOUND_AREA",
		53: "ERROR_FLIGHT_PATH_NOT_FOUND_MODEL",
		54: "ERROR_FLIGHT_PATH_OUT_OF_AREA",
		55: "ERROR_FLIGHT_PATH_ILLIGAL_POSITION",
		60: "ERROR_COMMUNICATION_FC",
		50: "ERRROR_FLIGHT_PATH_UNKNOWN",
	}
	MissionControllerResult_Status_value = map[string]int32{
		"SATUS_UNSPECIFIED":                  0,
		"CONTINUE":                           5,
		"END":                                1,
		"COMPLETE":                           2,
		"ERROR":                              3,
		"INTERNAL_ERRO":                      9,
		"ERROR_PARAMETER":                    11,
		"ERROR_UNSTABLE":                     13,
		"ERROR_EMPTY_MISSION":                14,
		"ERROR_FC_BUSY":                      15,
		"ERROR_FLIGHT_PATH_STRATA_CONFIG":    51,
		"ERROR_FLIGHT_PATH_NOT_FOUND_AREA":   52,
		"ERROR_FLIGHT_PATH_NOT_FOUND_MODEL":  53,
		"ERROR_FLIGHT_PATH_OUT_OF_AREA":      54,
		"ERROR_FLIGHT_PATH_ILLIGAL_POSITION": 55,
		"ERROR_COMMUNICATION_FC":             60,
		"ERRROR_FLIGHT_PATH_UNKNOWN":         50,
	}
)

func (x MissionControllerResult_Status) Enum() *MissionControllerResult_Status {
	p := new(MissionControllerResult_Status)
	*p = x
	return p
}

func (x MissionControllerResult_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MissionControllerResult_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[6].Descriptor()
}

func (MissionControllerResult_Status) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[6]
}

func (x MissionControllerResult_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MissionControllerResult_Status.Descriptor instead.
func (MissionControllerResult_Status) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{3, 0}
}

type Mission_EtaAttr int32

const (
	Mission_ETA_PROGRESS Mission_EtaAttr = 0
	Mission_ETA_TIME     Mission_EtaAttr = 1
)

// Enum value maps for Mission_EtaAttr.
var (
	Mission_EtaAttr_name = map[int32]string{
		0: "ETA_PROGRESS",
		1: "ETA_TIME",
	}
	Mission_EtaAttr_value = map[string]int32{
		"ETA_PROGRESS": 0,
		"ETA_TIME":     1,
	}
)

func (x Mission_EtaAttr) Enum() *Mission_EtaAttr {
	p := new(Mission_EtaAttr)
	*p = x
	return p
}

func (x Mission_EtaAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mission_EtaAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[7].Descriptor()
}

func (Mission_EtaAttr) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[7]
}

func (x Mission_EtaAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mission_EtaAttr.Descriptor instead.
func (Mission_EtaAttr) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{5, 0}
}

// DB化に合わせたリファクタリング予定
type MissionItem_ItemAttr int32

const (
	MissionItem_ITEM_ATTR_UNSPECIFIED MissionItem_ItemAttr = 0
	MissionItem_AUTO                  MissionItem_ItemAttr = 1
	MissionItem_USER                  MissionItem_ItemAttr = 2
	// 次のWPへのルートは自動設計しない（ラダールート等に利用）。wideareaのみ対応。Singleで指定した場合は未保証。
	MissionItem_FIXED MissionItem_ItemAttr = 3
)

// Enum value maps for MissionItem_ItemAttr.
var (
	MissionItem_ItemAttr_name = map[int32]string{
		0: "ITEM_ATTR_UNSPECIFIED",
		1: "AUTO",
		2: "USER",
		3: "FIXED",
	}
	MissionItem_ItemAttr_value = map[string]int32{
		"ITEM_ATTR_UNSPECIFIED": 0,
		"AUTO":                  1,
		"USER":                  2,
		"FIXED":                 3,
	}
)

func (x MissionItem_ItemAttr) Enum() *MissionItem_ItemAttr {
	p := new(MissionItem_ItemAttr)
	*p = x
	return p
}

func (x MissionItem_ItemAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MissionItem_ItemAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[8].Descriptor()
}

func (MissionItem_ItemAttr) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[8]
}

func (x MissionItem_ItemAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MissionItem_ItemAttr.Descriptor instead.
func (MissionItem_ItemAttr) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{6, 0}
}

// 次のWPへのルートの属性
type MissionItem_SafetyRoute int32

const (
	MissionItem_SAFTY_ROUTE_UNSPECIFIED MissionItem_SafetyRoute = 0
	// ルート設計成功（当面はWarn属性を含む）
	MissionItem_ROUTE_SAFE MissionItem_SafetyRoute = 1
	// wide areaにおいてルート設計不可（ダイレクトにUser間を結ぶルート）
	MissionItem_ROUTE_UNSAFE MissionItem_SafetyRoute = 3
	// Waypointがバリア内に存在する区間
	MissionItem_ROUTE_DANGER MissionItem_SafetyRoute = 4
)

// Enum value maps for MissionItem_SafetyRoute.
var (
	MissionItem_SafetyRoute_name = map[int32]string{
		0: "SAFTY_ROUTE_UNSPECIFIED",
		1: "ROUTE_SAFE",
		3: "ROUTE_UNSAFE",
		4: "ROUTE_DANGER",
	}
	MissionItem_SafetyRoute_value = map[string]int32{
		"SAFTY_ROUTE_UNSPECIFIED": 0,
		"ROUTE_SAFE":              1,
		"ROUTE_UNSAFE":            3,
		"ROUTE_DANGER":            4,
	}
)

func (x MissionItem_SafetyRoute) Enum() *MissionItem_SafetyRoute {
	p := new(MissionItem_SafetyRoute)
	*p = x
	return p
}

func (x MissionItem_SafetyRoute) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MissionItem_SafetyRoute) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[9].Descriptor()
}

func (MissionItem_SafetyRoute) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[9]
}

func (x MissionItem_SafetyRoute) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MissionItem_SafetyRoute.Descriptor instead.
func (MissionItem_SafetyRoute) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{6, 1}
}

// Pitch/Yaw指定モード。absoluteのみ許容。廃止予定。
type CameraControl_ControlMode int32

const (
	// 相対値（現在値からの移動量）指定。SERVOタイプのミッションにおいては無効（absoluteとして扱われる）。
	CameraControl_DIFFERENTIAL CameraControl_ControlMode = 0
	// 絶対値指定
	CameraControl_ABSOLUTE CameraControl_ControlMode = 1
)

// Enum value maps for CameraControl_ControlMode.
var (
	CameraControl_ControlMode_name = map[int32]string{
		0: "DIFFERENTIAL",
		1: "ABSOLUTE",
	}
	CameraControl_ControlMode_value = map[string]int32{
		"DIFFERENTIAL": 0,
		"ABSOLUTE":     1,
	}
)

func (x CameraControl_ControlMode) Enum() *CameraControl_ControlMode {
	p := new(CameraControl_ControlMode)
	*p = x
	return p
}

func (x CameraControl_ControlMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraControl_ControlMode) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[10].Descriptor()
}

func (CameraControl_ControlMode) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[10]
}

func (x CameraControl_ControlMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CameraControl_ControlMode.Descriptor instead.
func (CameraControl_ControlMode) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{10, 0}
}

// 静止画コマンド
type CameraControl_PictureControl int32

const (
	// 撮影
	CameraControl_SHUTTER CameraControl_PictureControl = 0
	// 内部処理用。指示不要（自動でリリースする）。
	CameraControl_RELEASE CameraControl_PictureControl = 1
)

// Enum value maps for CameraControl_PictureControl.
var (
	CameraControl_PictureControl_name = map[int32]string{
		0: "SHUTTER",
		1: "RELEASE",
	}
	CameraControl_PictureControl_value = map[string]int32{
		"SHUTTER": 0,
		"RELEASE": 1,
	}
)

func (x CameraControl_PictureControl) Enum() *CameraControl_PictureControl {
	p := new(CameraControl_PictureControl)
	*p = x
	return p
}

func (x CameraControl_PictureControl) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraControl_PictureControl) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[11].Descriptor()
}

func (CameraControl_PictureControl) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[11]
}

func (x CameraControl_PictureControl) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CameraControl_PictureControl.Descriptor instead.
func (CameraControl_PictureControl) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{10, 1}
}

// 動画コマンド
type CameraControl_MovieControl int32

const (
	CameraControl_START CameraControl_MovieControl = 0
	CameraControl_STOP  CameraControl_MovieControl = 1
)

// Enum value maps for CameraControl_MovieControl.
var (
	CameraControl_MovieControl_name = map[int32]string{
		0: "START",
		1: "STOP",
	}
	CameraControl_MovieControl_value = map[string]int32{
		"START": 0,
		"STOP":  1,
	}
)

func (x CameraControl_MovieControl) Enum() *CameraControl_MovieControl {
	p := new(CameraControl_MovieControl)
	*p = x
	return p
}

func (x CameraControl_MovieControl) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraControl_MovieControl) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[12].Descriptor()
}

func (CameraControl_MovieControl) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[12]
}

func (x CameraControl_MovieControl) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CameraControl_MovieControl.Descriptor instead.
func (CameraControl_MovieControl) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{10, 2}
}

type CameraControl_ImageMode int32

const (
	CameraControl_MOVIE_MODE   CameraControl_ImageMode = 0
	CameraControl_PICTURE_MODE CameraControl_ImageMode = 1
)

// Enum value maps for CameraControl_ImageMode.
var (
	CameraControl_ImageMode_name = map[int32]string{
		0: "MOVIE_MODE",
		1: "PICTURE_MODE",
	}
	CameraControl_ImageMode_value = map[string]int32{
		"MOVIE_MODE":   0,
		"PICTURE_MODE": 1,
	}
)

func (x CameraControl_ImageMode) Enum() *CameraControl_ImageMode {
	p := new(CameraControl_ImageMode)
	*p = x
	return p
}

func (x CameraControl_ImageMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraControl_ImageMode) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[13].Descriptor()
}

func (CameraControl_ImageMode) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[13]
}

func (x CameraControl_ImageMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CameraControl_ImageMode.Descriptor instead.
func (CameraControl_ImageMode) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{10, 3}
}

// 画像モード
type CameraControl_RayMode int32

const (
	// 可視光映像
	CameraControl_VISIBLE CameraControl_RayMode = 0
	// 赤外線映像
	CameraControl_INFRARED CameraControl_RayMode = 1
)

// Enum value maps for CameraControl_RayMode.
var (
	CameraControl_RayMode_name = map[int32]string{
		0: "VISIBLE",
		1: "INFRARED",
	}
	CameraControl_RayMode_value = map[string]int32{
		"VISIBLE":  0,
		"INFRARED": 1,
	}
)

func (x CameraControl_RayMode) Enum() *CameraControl_RayMode {
	p := new(CameraControl_RayMode)
	*p = x
	return p
}

func (x CameraControl_RayMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraControl_RayMode) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[14].Descriptor()
}

func (CameraControl_RayMode) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[14]
}

func (x CameraControl_RayMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CameraControl_RayMode.Descriptor instead.
func (CameraControl_RayMode) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{10, 4}
}

// Type。リクエストでは設定不可。
type ItemParameterWaypoint_Type int32

const (
	// 通常のROI
	ItemParameterWaypoint_GENERAL ItemParameterWaypoint_Type = 0
	// RoadROIにより生成されたWaypoint
	ItemParameterWaypoint_ROAD_ROI ItemParameterWaypoint_Type = 1
)

// Enum value maps for ItemParameterWaypoint_Type.
var (
	ItemParameterWaypoint_Type_name = map[int32]string{
		0: "GENERAL",
		1: "ROAD_ROI",
	}
	ItemParameterWaypoint_Type_value = map[string]int32{
		"GENERAL":  0,
		"ROAD_ROI": 1,
	}
)

func (x ItemParameterWaypoint_Type) Enum() *ItemParameterWaypoint_Type {
	p := new(ItemParameterWaypoint_Type)
	*p = x
	return p
}

func (x ItemParameterWaypoint_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemParameterWaypoint_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[15].Descriptor()
}

func (ItemParameterWaypoint_Type) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[15]
}

func (x ItemParameterWaypoint_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemParameterWaypoint_Type.Descriptor instead.
func (ItemParameterWaypoint_Type) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{11, 0}
}

// 着陸種別
type ItemParameterLand_LandMode int32

const (
	ItemParameterLand_LAND_MODE_UNSPECIFIED ItemParameterLand_LandMode = 0
	ItemParameterLand_DEFAULT               ItemParameterLand_LandMode = 10 // 機体の種別により自動でモードを決定する
	ItemParameterLand_TAKEOFF_POINT         ItemParameterLand_LandMode = 1  // 離陸地点に戻って着陸する。（緯度、経度の指定は無視される）
	ItemParameterLand_RTL                   ItemParameterLand_LandMode = 2  // RTLに指定された位置へ着陸する。（緯度、経度の指定は無視される）
	ItemParameterLand_CURRENT               ItemParameterLand_LandMode = 3  // 緯度、経度で指定した位置に着陸する。
	ItemParameterLand_TRACKING              ItemParameterLand_LandMode = 4  // トラッキングで与える場所に着陸（実装予定）（緯度、経度の指定は無視される）
)

// Enum value maps for ItemParameterLand_LandMode.
var (
	ItemParameterLand_LandMode_name = map[int32]string{
		0:  "LAND_MODE_UNSPECIFIED",
		10: "DEFAULT",
		1:  "TAKEOFF_POINT",
		2:  "RTL",
		3:  "CURRENT",
		4:  "TRACKING",
	}
	ItemParameterLand_LandMode_value = map[string]int32{
		"LAND_MODE_UNSPECIFIED": 0,
		"DEFAULT":               10,
		"TAKEOFF_POINT":         1,
		"RTL":                   2,
		"CURRENT":               3,
		"TRACKING":              4,
	}
)

func (x ItemParameterLand_LandMode) Enum() *ItemParameterLand_LandMode {
	p := new(ItemParameterLand_LandMode)
	*p = x
	return p
}

func (x ItemParameterLand_LandMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemParameterLand_LandMode) Descriptor() protoreflect.EnumDescriptor {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[16].Descriptor()
}

func (ItemParameterLand_LandMode) Type() protoreflect.EnumType {
	return &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes[16]
}

func (x ItemParameterLand_LandMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemParameterLand_LandMode.Descriptor instead.
func (ItemParameterLand_LandMode) EnumDescriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{12, 0}
}

type TransactionID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string                  `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`                                                                           // トランザクション識別子
	Attribute  TransactionID_Attribute `protobuf:"varint,2,opt,name=attribute,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.TransactionID_Attribute" json:"attribute,omitempty"` // 種別
}

func (x *TransactionID) Reset() {
	*x = TransactionID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionID) ProtoMessage() {}

func (x *TransactionID) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionID.ProtoReflect.Descriptor instead.
func (*TransactionID) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionID) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *TransactionID) GetAttribute() TransactionID_Attribute {
	if x != nil {
		return x.Attribute
	}
	return TransactionID_SINGLE
}

type ScheduledTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Available *bool                  `protobuf:"varint,1,opt,name=available,proto3,oneof" json:"available,omitempty"`
	Time      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Period    *durationpb.Duration   `protobuf:"bytes,3,opt,name=period,proto3" json:"period,omitempty"`
	Occupy    *durationpb.Duration   `protobuf:"bytes,4,opt,name=occupy,proto3" json:"occupy,omitempty"`
}

func (x *ScheduledTime) Reset() {
	*x = ScheduledTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledTime) ProtoMessage() {}

func (x *ScheduledTime) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledTime.ProtoReflect.Descriptor instead.
func (*ScheduledTime) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{1}
}

func (x *ScheduledTime) GetAvailable() bool {
	if x != nil && x.Available != nil {
		return *x.Available
	}
	return false
}

func (x *ScheduledTime) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *ScheduledTime) GetPeriod() *durationpb.Duration {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *ScheduledTime) GetOccupy() *durationpb.Duration {
	if x != nil {
		return x.Occupy
	}
	return nil
}

// Export
type ExternalMission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Status string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Attr   ExternalMission_Format `protobuf:"varint,3,opt,name=attr,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.ExternalMission_Format" json:"attr,omitempty"`
	// Types that are assignable to MissionFormat:
	//
	//	*ExternalMission_Trjx
	//	*ExternalMission_Csv
	//	*ExternalMission_JsonMission
	MissionFormat isExternalMission_MissionFormat `protobuf_oneof:"MissionFormat"`
}

func (x *ExternalMission) Reset() {
	*x = ExternalMission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalMission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalMission) ProtoMessage() {}

func (x *ExternalMission) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalMission.ProtoReflect.Descriptor instead.
func (*ExternalMission) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{2}
}

func (x *ExternalMission) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ExternalMission) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExternalMission) GetAttr() ExternalMission_Format {
	if x != nil {
		return x.Attr
	}
	return ExternalMission_TRJX_FORMAT
}

func (m *ExternalMission) GetMissionFormat() isExternalMission_MissionFormat {
	if m != nil {
		return m.MissionFormat
	}
	return nil
}

func (x *ExternalMission) GetTrjx() *Mission {
	if x, ok := x.GetMissionFormat().(*ExternalMission_Trjx); ok {
		return x.Trjx
	}
	return nil
}

func (x *ExternalMission) GetCsv() string {
	if x, ok := x.GetMissionFormat().(*ExternalMission_Csv); ok {
		return x.Csv
	}
	return ""
}

func (x *ExternalMission) GetJsonMission() string {
	if x, ok := x.GetMissionFormat().(*ExternalMission_JsonMission); ok {
		return x.JsonMission
	}
	return ""
}

type isExternalMission_MissionFormat interface {
	isExternalMission_MissionFormat()
}

type ExternalMission_Trjx struct {
	Trjx *Mission `protobuf:"bytes,4,opt,name=trjx,proto3,oneof"`
}

type ExternalMission_Csv struct {
	Csv string `protobuf:"bytes,5,opt,name=csv,proto3,oneof"`
}

type ExternalMission_JsonMission struct {
	JsonMission string `protobuf:"bytes,6,opt,name=json_mission,json=jsonMission,proto3,oneof"` // .mission拡張子(mavlink)
}

func (*ExternalMission_Trjx) isExternalMission_MissionFormat() {}

func (*ExternalMission_Csv) isExternalMission_MissionFormat() {}

func (*ExternalMission_JsonMission) isExternalMission_MissionFormat() {}

// MissionControllerの処理結果の基本形
// at *
// in SaveMissionResult
type MissionControllerResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status MissionControllerResult_Status `protobuf:"varint,1,opt,name=status,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.MissionControllerResult_Status" json:"status,omitempty"` // 処理結果
	Detail string                         `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`                                                                                    // 詳細情報
}

func (x *MissionControllerResult) Reset() {
	*x = MissionControllerResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionControllerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionControllerResult) ProtoMessage() {}

func (x *MissionControllerResult) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionControllerResult.ProtoReflect.Descriptor instead.
func (*MissionControllerResult) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{3}
}

func (x *MissionControllerResult) GetStatus() MissionControllerResult_Status {
	if x != nil {
		return x.Status
	}
	return MissionControllerResult_SATUS_UNSPECIFIED
}

func (x *MissionControllerResult) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type ApplicationAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// すべてのMission形式を解釈できるアプリの場合はfalse。trueの場合はbundleIDが一致しないとUpdateできない。ReadやCreateMissionで生成されたミッションを透過的にSaveする場合にはfalseとする（もしくはApplicationAttrを設定しない）。
	SubsetMission bool `protobuf:"varint,1,opt,name=subset_mission,json=subsetMission,proto3" json:"subset_mission,omitempty"`
	// 例
	// (1) Trapon：jp.trajectory.trapon
	// (2) Mobile：jp.trajectory.mobile
	// (3) TRJX-UI：jp.trajectory.trjxui
	// (4) TRJXコマンド：jp.trajectory.trjxcmd
	//
	// TRJXで自動生成されたルートでは、jp.trajectory.trjxが設定される
	// ドメイン形式
	BundleId string `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
}

func (x *ApplicationAttr) Reset() {
	*x = ApplicationAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAttr) ProtoMessage() {}

func (x *ApplicationAttr) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAttr.ProtoReflect.Descriptor instead.
func (*ApplicationAttr) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{4}
}

func (x *ApplicationAttr) GetSubsetMission() bool {
	if x != nil {
		return x.SubsetMission
	}
	return false
}

func (x *ApplicationAttr) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

type Mission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ETA種別
	EtaAttr Mission_EtaAttr `protobuf:"varint,1,opt,name=eta_attr,json=etaAttr,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.Mission_EtaAttr" json:"eta_attr,omitempty"`
	// ミッションのリスト
	ItemsArray []*MissionItem `protobuf:"bytes,9,rep,name=items_array,json=itemsArray,proto3" json:"items_array,omitempty"`
	// ROIグループのリスト。
	RoiGroups []*ROI `protobuf:"bytes,12,rep,name=roi_groups,json=roiGroups,proto3" json:"roi_groups,omitempty"`
	// Missionを生成したアプリケーション。未設定はすべてのMissionItemを解釈できるアプリケーション。未設定時はsubsetMission=falseとして解釈する。本パラメータは読み取り専用、編集禁止。
	App *ApplicationAttr `protobuf:"bytes,20,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *Mission) Reset() {
	*x = Mission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mission) ProtoMessage() {}

func (x *Mission) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mission.ProtoReflect.Descriptor instead.
func (*Mission) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{5}
}

func (x *Mission) GetEtaAttr() Mission_EtaAttr {
	if x != nil {
		return x.EtaAttr
	}
	return Mission_ETA_PROGRESS
}

func (x *Mission) GetItemsArray() []*MissionItem {
	if x != nil {
		return x.ItemsArray
	}
	return nil
}

func (x *Mission) GetRoiGroups() []*ROI {
	if x != nil {
		return x.RoiGroups
	}
	return nil
}

func (x *Mission) GetApp() *ApplicationAttr {
	if x != nil {
		return x.App
	}
	return nil
}

// MissionItem（ミッションの構成要素）
// in Mission,（内部形式itemGraphElement）
// （Missionおよび内部形式（itemGraphElement）で保持するための構造体）
// 各要素で設定されるtagおよびtagOfGroupは、"0"および"_"で始まる名称は予約（利用不可）
type MissionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MissionItemを識別するための識別子。
	// ルート計算で自動設定されたものにはプリフィックスが付与される(_AUTOnn_) 。nnは0から始まる通番。
	Tag  string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// ミッションの種類毎のミッション設定情報
	//
	// Types that are assignable to ItemParameter:
	//
	//	*MissionItem_Takeoff
	//	*MissionItem_Waypoint
	//	*MissionItem_Land
	//	*MissionItem_Speed
	//	*MissionItem_Yaw
	//	*MissionItem_Roi
	//	*MissionItem_Delay
	ItemParameter isMissionItem_ItemParameter `protobuf_oneof:"ItemParameter"`
}

func (x *MissionItem) Reset() {
	*x = MissionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionItem) ProtoMessage() {}

func (x *MissionItem) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionItem.ProtoReflect.Descriptor instead.
func (*MissionItem) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{6}
}

func (x *MissionItem) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *MissionItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *MissionItem) GetItemParameter() isMissionItem_ItemParameter {
	if m != nil {
		return m.ItemParameter
	}
	return nil
}

func (x *MissionItem) GetTakeoff() *ItemParameterTakeoff {
	if x, ok := x.GetItemParameter().(*MissionItem_Takeoff); ok {
		return x.Takeoff
	}
	return nil
}

func (x *MissionItem) GetWaypoint() *ItemParameterWaypoint {
	if x, ok := x.GetItemParameter().(*MissionItem_Waypoint); ok {
		return x.Waypoint
	}
	return nil
}

func (x *MissionItem) GetLand() *ItemParameterLand {
	if x, ok := x.GetItemParameter().(*MissionItem_Land); ok {
		return x.Land
	}
	return nil
}

func (x *MissionItem) GetSpeed() *ItemParameterSpeed {
	if x, ok := x.GetItemParameter().(*MissionItem_Speed); ok {
		return x.Speed
	}
	return nil
}

func (x *MissionItem) GetYaw() *ItemParameterYaw {
	if x, ok := x.GetItemParameter().(*MissionItem_Yaw); ok {
		return x.Yaw
	}
	return nil
}

func (x *MissionItem) GetRoi() *ItemParameterROI {
	if x, ok := x.GetItemParameter().(*MissionItem_Roi); ok {
		return x.Roi
	}
	return nil
}

func (x *MissionItem) GetDelay() *ItemParameterDelay {
	if x, ok := x.GetItemParameter().(*MissionItem_Delay); ok {
		return x.Delay
	}
	return nil
}

type isMissionItem_ItemParameter interface {
	isMissionItem_ItemParameter()
}

type MissionItem_Takeoff struct {
	// 離陸
	Takeoff *ItemParameterTakeoff `protobuf:"bytes,11,opt,name=takeoff,proto3,oneof"`
}

type MissionItem_Waypoint struct {
	// Waypoint（通過点）
	Waypoint *ItemParameterWaypoint `protobuf:"bytes,12,opt,name=waypoint,proto3,oneof"`
}

type MissionItem_Land struct {
	// 着陸
	Land *ItemParameterLand `protobuf:"bytes,14,opt,name=land,proto3,oneof"`
}

type MissionItem_Speed struct {
	// スピード設定
	Speed *ItemParameterSpeed `protobuf:"bytes,15,opt,name=speed,proto3,oneof"`
}

type MissionItem_Yaw struct {
	// 機首方向指定。Waypoint通過やoverride_go_toによりキャンセルされることがある。
	Yaw *ItemParameterYaw `protobuf:"bytes,16,opt,name=yaw,proto3,oneof"`
}

type MissionItem_Roi struct {
	// 未使用（Not available）
	Roi *ItemParameterROI `protobuf:"bytes,10,opt,name=roi,proto3,oneof"`
}

type MissionItem_Delay struct {
	Delay *ItemParameterDelay `protobuf:"bytes,17,opt,name=delay,proto3,oneof"`
}

func (*MissionItem_Takeoff) isMissionItem_ItemParameter() {}

func (*MissionItem_Waypoint) isMissionItem_ItemParameter() {}

func (*MissionItem_Land) isMissionItem_ItemParameter() {}

func (*MissionItem_Speed) isMissionItem_ItemParameter() {}

func (*MissionItem_Yaw) isMissionItem_ItemParameter() {}

func (*MissionItem_Roi) isMissionItem_ItemParameter() {}

func (*MissionItem_Delay) isMissionItem_ItemParameter() {}

type PortZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId int64 `protobuf:"varint,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	// 離陸：指定なしの場合は機体を置いた位置から離陸する。機体を置いた周辺のスポットが予約されている時はエラー。
	// 着陸：指定なしの場合は空きスポットを自動割付（将来的に実装予定）。
	SpotId *int64 `protobuf:"varint,2,opt,name=spot_id,json=spotId,proto3,oneof" json:"spot_id,omitempty"`
}

func (x *PortZone) Reset() {
	*x = PortZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortZone) ProtoMessage() {}

func (x *PortZone) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortZone.ProtoReflect.Descriptor instead.
func (*PortZone) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{7}
}

func (x *PortZone) GetPortId() int64 {
	if x != nil {
		return x.PortId
	}
	return 0
}

func (x *PortZone) GetSpotId() int64 {
	if x != nil && x.SpotId != nil {
		return *x.SpotId
	}
	return 0
}

// 離陸を実行する。
type ItemParameterTakeoff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ROIグループ名
	TagOfGroup string `protobuf:"bytes,1,opt,name=tag_of_group,json=tagOfGroup,proto3" json:"tag_of_group,omitempty"`
	// 垂直上昇高度
	// optional trajectory.trjx_api_service.Altitude takeoff_altitude = 6 ;  // DEPRECATED（Conditionで指定）
	//
	// Types that are assignable to TakeoffSelect:
	//
	//	*ItemParameterTakeoff_PortZone
	//	*ItemParameterTakeoff_Condition_
	TakeoffSelect isItemParameterTakeoff_TakeoffSelect `protobuf_oneof:"takeoff_select"`
}

func (x *ItemParameterTakeoff) Reset() {
	*x = ItemParameterTakeoff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemParameterTakeoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemParameterTakeoff) ProtoMessage() {}

func (x *ItemParameterTakeoff) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemParameterTakeoff.ProtoReflect.Descriptor instead.
func (*ItemParameterTakeoff) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{8}
}

func (x *ItemParameterTakeoff) GetTagOfGroup() string {
	if x != nil {
		return x.TagOfGroup
	}
	return ""
}

func (m *ItemParameterTakeoff) GetTakeoffSelect() isItemParameterTakeoff_TakeoffSelect {
	if m != nil {
		return m.TakeoffSelect
	}
	return nil
}

func (x *ItemParameterTakeoff) GetPortZone() *PortZone {
	if x, ok := x.GetTakeoffSelect().(*ItemParameterTakeoff_PortZone); ok {
		return x.PortZone
	}
	return nil
}

func (x *ItemParameterTakeoff) GetCondition() *ItemParameterTakeoff_Condition {
	if x, ok := x.GetTakeoffSelect().(*ItemParameterTakeoff_Condition_); ok {
		return x.Condition
	}
	return nil
}

type isItemParameterTakeoff_TakeoffSelect interface {
	isItemParameterTakeoff_TakeoffSelect()
}

type ItemParameterTakeoff_PortZone struct {
	PortZone *PortZone `protobuf:"bytes,11,opt,name=port_zone,json=portZone,proto3,oneof"` // ポート利用
}

type ItemParameterTakeoff_Condition_ struct {
	Condition *ItemParameterTakeoff_Condition `protobuf:"bytes,12,opt,name=condition,proto3,oneof"` // 条件の明示的指定
}

func (*ItemParameterTakeoff_PortZone) isItemParameterTakeoff_TakeoffSelect() {}

func (*ItemParameterTakeoff_Condition_) isItemParameterTakeoff_TakeoffSelect() {}

// ROIを指定する。
type ItemParameterROI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ROIの緯度
	Latitude float64 `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// ROIの経度
	Longitude float64 `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// ROIの高度
	Altitude *_type.Altitude `protobuf:"bytes,5,opt,name=altitude,proto3" json:"altitude,omitempty"`
}

func (x *ItemParameterROI) Reset() {
	*x = ItemParameterROI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemParameterROI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemParameterROI) ProtoMessage() {}

func (x *ItemParameterROI) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemParameterROI.ProtoReflect.Descriptor instead.
func (*ItemParameterROI) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{9}
}

func (x *ItemParameterROI) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *ItemParameterROI) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *ItemParameterROI) GetAltitude() *_type.Altitude {
	if x != nil {
		return x.Altitude
	}
	return nil
}

// カメラ操作
type CameraControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to CameraCommand:
	//
	//	*CameraControl_Pitch
	//	*CameraControl_Yaw
	//	*CameraControl_Picture
	//	*CameraControl_Movie
	//	*CameraControl_Zoom
	//	*CameraControl_ImageMode_
	//	*CameraControl_RayMode_
	CameraCommand isCameraControl_CameraCommand `protobuf_oneof:"CameraCommand"`
}

func (x *CameraControl) Reset() {
	*x = CameraControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CameraControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraControl) ProtoMessage() {}

func (x *CameraControl) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraControl.ProtoReflect.Descriptor instead.
func (*CameraControl) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{10}
}

func (m *CameraControl) GetCameraCommand() isCameraControl_CameraCommand {
	if m != nil {
		return m.CameraCommand
	}
	return nil
}

func (x *CameraControl) GetPitch() *CameraControl_Angle {
	if x, ok := x.GetCameraCommand().(*CameraControl_Pitch); ok {
		return x.Pitch
	}
	return nil
}

func (x *CameraControl) GetYaw() *CameraControl_Angle {
	if x, ok := x.GetCameraCommand().(*CameraControl_Yaw); ok {
		return x.Yaw
	}
	return nil
}

func (x *CameraControl) GetPicture() CameraControl_PictureControl {
	if x, ok := x.GetCameraCommand().(*CameraControl_Picture); ok {
		return x.Picture
	}
	return CameraControl_SHUTTER
}

func (x *CameraControl) GetMovie() CameraControl_MovieControl {
	if x, ok := x.GetCameraCommand().(*CameraControl_Movie); ok {
		return x.Movie
	}
	return CameraControl_START
}

func (x *CameraControl) GetZoom() *CameraControl_ZoomControl {
	if x, ok := x.GetCameraCommand().(*CameraControl_Zoom); ok {
		return x.Zoom
	}
	return nil
}

func (x *CameraControl) GetImageMode() CameraControl_ImageMode {
	if x, ok := x.GetCameraCommand().(*CameraControl_ImageMode_); ok {
		return x.ImageMode
	}
	return CameraControl_MOVIE_MODE
}

func (x *CameraControl) GetRayMode() CameraControl_RayMode {
	if x, ok := x.GetCameraCommand().(*CameraControl_RayMode_); ok {
		return x.RayMode
	}
	return CameraControl_VISIBLE
}

type isCameraControl_CameraCommand interface {
	isCameraControl_CameraCommand()
}

type CameraControl_Pitch struct {
	Pitch *CameraControl_Angle `protobuf:"bytes,1,opt,name=pitch,proto3,oneof"`
}

type CameraControl_Yaw struct {
	Yaw *CameraControl_Angle `protobuf:"bytes,2,opt,name=yaw,proto3,oneof"`
}

type CameraControl_Picture struct {
	Picture CameraControl_PictureControl `protobuf:"varint,3,opt,name=picture,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.CameraControl_PictureControl,oneof"`
}

type CameraControl_Movie struct {
	Movie CameraControl_MovieControl `protobuf:"varint,4,opt,name=movie,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.CameraControl_MovieControl,oneof"`
}

type CameraControl_Zoom struct {
	Zoom *CameraControl_ZoomControl `protobuf:"bytes,5,opt,name=zoom,proto3,oneof"`
}

type CameraControl_ImageMode_ struct {
	ImageMode CameraControl_ImageMode `protobuf:"varint,6,opt,name=image_mode,json=imageMode,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.CameraControl_ImageMode,oneof"`
}

type CameraControl_RayMode_ struct {
	RayMode CameraControl_RayMode `protobuf:"varint,7,opt,name=ray_mode,json=rayMode,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.CameraControl_RayMode,oneof"`
}

func (*CameraControl_Pitch) isCameraControl_CameraCommand() {}

func (*CameraControl_Yaw) isCameraControl_CameraCommand() {}

func (*CameraControl_Picture) isCameraControl_CameraCommand() {}

func (*CameraControl_Movie) isCameraControl_CameraCommand() {}

func (*CameraControl_Zoom) isCameraControl_CameraCommand() {}

func (*CameraControl_ImageMode_) isCameraControl_CameraCommand() {}

func (*CameraControl_RayMode_) isCameraControl_CameraCommand() {}

// 指定の座標のWaypointへ向かう
type ItemParameterWaypoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ROIグループ名
	// heading設定時は無効
	TagOfGroup string `protobuf:"bytes,1,opt,name=tag_of_group,json=tagOfGroup,proto3" json:"tag_of_group,omitempty"`
	// 緯度（度）
	Latitude float64 `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// 経度（度）
	Longitude float64 `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// 高度（m）
	Altitude *_type.Altitude `protobuf:"bytes,5,opt,name=altitude,proto3" json:"altitude,omitempty"`
	// ETA 到着予定時刻。UNIX時刻（秒）
	Eta int64 `protobuf:"varint,6,opt,name=eta,proto3" json:"eta,omitempty"`
	// 次のWaypointへのルートの属性
	SafetyRouteAttr MissionItem_SafetyRoute `protobuf:"varint,7,opt,name=safety_route_attr,json=safetyRouteAttr,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.MissionItem_SafetyRoute" json:"safety_route_attr,omitempty"`
	// trueで無限pause（再開メッセージを受けるまで）
	Pause bool `protobuf:"varint,10,opt,name=pause,proto3" json:"pause,omitempty"`
	// pauseがfalseの場合のみ有効。秒
	Holdtime float32 `protobuf:"fixed32,11,opt,name=holdtime,proto3" json:"holdtime,omitempty"`
	// ヘディング
	// 指定なしの場合は進行方向。heading設定でROI（tagOfGroup）はキャンセル。
	// 度。絶対角度、北が0度。
	Heading *float32 `protobuf:"fixed32,12,opt,name=heading,proto3,oneof" json:"heading,omitempty"`
	// スピード（本WP通過後の速度）
	// 対地速度（COG）。m/s
	Speed *float32             `protobuf:"fixed32,13,opt,name=speed,proto3,oneof" json:"speed,omitempty"`
	Attr  MissionItem_ItemAttr `protobuf:"varint,20,opt,name=attr,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.MissionItem_ItemAttr" json:"attr,omitempty"`
	// 角度は絶対値指定（absolute）のみ許容。重複不可。
	CameraControls []*CameraControl `protobuf:"bytes,41,rep,name=camera_controls,json=cameraControls,proto3" json:"camera_controls,omitempty"`
	// 指定がなく、ROIが設定され、機体が能力を有する場合はシャッターを切る（Shoot=trueに同じ）
	//
	// Types that are assignable to CameraOption:
	//
	//	*ItemParameterWaypoint_AutoShoot
	//	*ItemParameterWaypoint_ShootIntervalDistance
	//	*ItemParameterWaypoint_ShootIntervalTime
	CameraOption isItemParameterWaypoint_CameraOption `protobuf_oneof:"CameraOption"`
	WaypointType ItemParameterWaypoint_Type           `protobuf:"varint,21,opt,name=waypoint_type,json=waypointType,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.ItemParameterWaypoint_Type" json:"waypoint_type,omitempty"`
}

func (x *ItemParameterWaypoint) Reset() {
	*x = ItemParameterWaypoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemParameterWaypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemParameterWaypoint) ProtoMessage() {}

func (x *ItemParameterWaypoint) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemParameterWaypoint.ProtoReflect.Descriptor instead.
func (*ItemParameterWaypoint) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{11}
}

func (x *ItemParameterWaypoint) GetTagOfGroup() string {
	if x != nil {
		return x.TagOfGroup
	}
	return ""
}

func (x *ItemParameterWaypoint) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *ItemParameterWaypoint) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *ItemParameterWaypoint) GetAltitude() *_type.Altitude {
	if x != nil {
		return x.Altitude
	}
	return nil
}

func (x *ItemParameterWaypoint) GetEta() int64 {
	if x != nil {
		return x.Eta
	}
	return 0
}

func (x *ItemParameterWaypoint) GetSafetyRouteAttr() MissionItem_SafetyRoute {
	if x != nil {
		return x.SafetyRouteAttr
	}
	return MissionItem_SAFTY_ROUTE_UNSPECIFIED
}

func (x *ItemParameterWaypoint) GetPause() bool {
	if x != nil {
		return x.Pause
	}
	return false
}

func (x *ItemParameterWaypoint) GetHoldtime() float32 {
	if x != nil {
		return x.Holdtime
	}
	return 0
}

func (x *ItemParameterWaypoint) GetHeading() float32 {
	if x != nil && x.Heading != nil {
		return *x.Heading
	}
	return 0
}

func (x *ItemParameterWaypoint) GetSpeed() float32 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return 0
}

func (x *ItemParameterWaypoint) GetAttr() MissionItem_ItemAttr {
	if x != nil {
		return x.Attr
	}
	return MissionItem_ITEM_ATTR_UNSPECIFIED
}

func (x *ItemParameterWaypoint) GetCameraControls() []*CameraControl {
	if x != nil {
		return x.CameraControls
	}
	return nil
}

func (m *ItemParameterWaypoint) GetCameraOption() isItemParameterWaypoint_CameraOption {
	if m != nil {
		return m.CameraOption
	}
	return nil
}

func (x *ItemParameterWaypoint) GetAutoShoot() bool {
	if x, ok := x.GetCameraOption().(*ItemParameterWaypoint_AutoShoot); ok {
		return x.AutoShoot
	}
	return false
}

func (x *ItemParameterWaypoint) GetShootIntervalDistance() float32 {
	if x, ok := x.GetCameraOption().(*ItemParameterWaypoint_ShootIntervalDistance); ok {
		return x.ShootIntervalDistance
	}
	return 0
}

func (x *ItemParameterWaypoint) GetShootIntervalTime() int32 {
	if x, ok := x.GetCameraOption().(*ItemParameterWaypoint_ShootIntervalTime); ok {
		return x.ShootIntervalTime
	}
	return 0
}

func (x *ItemParameterWaypoint) GetWaypointType() ItemParameterWaypoint_Type {
	if x != nil {
		return x.WaypointType
	}
	return ItemParameterWaypoint_GENERAL
}

type isItemParameterWaypoint_CameraOption interface {
	isItemParameterWaypoint_CameraOption()
}

type ItemParameterWaypoint_AutoShoot struct {
	// ROIが設定されていてもfalseの場合はシャッターを切らない。trueの場合はROIが設定されているとシャッターを切る。
	AutoShoot bool `protobuf:"varint,42,opt,name=auto_shoot,json=autoShoot,proto3,oneof"`
}

type ItemParameterWaypoint_ShootIntervalDistance struct {
	// 写真の撮影間隔（m）。0以下で停止。
	ShootIntervalDistance float32 `protobuf:"fixed32,43,opt,name=shoot_interval_distance,json=shootIntervalDistance,proto3,oneof"`
}

type ItemParameterWaypoint_ShootIntervalTime struct {
	// 写真の撮影間隔（秒）。0以下で停止。
	ShootIntervalTime int32 `protobuf:"varint,44,opt,name=shoot_interval_time,json=shootIntervalTime,proto3,oneof"`
}

func (*ItemParameterWaypoint_AutoShoot) isItemParameterWaypoint_CameraOption() {}

func (*ItemParameterWaypoint_ShootIntervalDistance) isItemParameterWaypoint_CameraOption() {}

func (*ItemParameterWaypoint_ShootIntervalTime) isItemParameterWaypoint_CameraOption() {}

// 着陸を実行する
// 最終ポイントで本Itemを指定しない場合はDefaultの動作になる
// RTLを指定した場合はRTLが変わるごとに自動でルートが変更される（未実装）
type ItemParameterLand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// LandMode mode = 8;  // DEPRECATED（Conditionで指定）
	// ROIグループ名
	TagOfGroup string `protobuf:"bytes,1,opt,name=tag_of_group,json=tagOfGroup,proto3" json:"tag_of_group,omitempty"` // RTL指定時は無効（離陸時のヘディングが自動で設定される）
	// optional trajectory.trjx_api_service.Altitude approach_altitude = 6 ; // 垂直降下を始める高度（着陸地点からの地上高。DEMが設定されていない地域でのAGL指定はエラー）// DEPRECATED（Conditionで指定）
	//
	// Types that are assignable to LandingSelect:
	//
	//	*ItemParameterLand_PortZone
	//	*ItemParameterLand_Condition_
	LandingSelect isItemParameterLand_LandingSelect `protobuf_oneof:"landing_select"`
	Attr          MissionItem_ItemAttr              `protobuf:"varint,20,opt,name=attr,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.MissionItem_ItemAttr" json:"attr,omitempty"`
}

func (x *ItemParameterLand) Reset() {
	*x = ItemParameterLand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemParameterLand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemParameterLand) ProtoMessage() {}

func (x *ItemParameterLand) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemParameterLand.ProtoReflect.Descriptor instead.
func (*ItemParameterLand) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{12}
}

func (x *ItemParameterLand) GetTagOfGroup() string {
	if x != nil {
		return x.TagOfGroup
	}
	return ""
}

func (m *ItemParameterLand) GetLandingSelect() isItemParameterLand_LandingSelect {
	if m != nil {
		return m.LandingSelect
	}
	return nil
}

func (x *ItemParameterLand) GetPortZone() *PortZone {
	if x, ok := x.GetLandingSelect().(*ItemParameterLand_PortZone); ok {
		return x.PortZone
	}
	return nil
}

func (x *ItemParameterLand) GetCondition() *ItemParameterLand_Condition {
	if x, ok := x.GetLandingSelect().(*ItemParameterLand_Condition_); ok {
		return x.Condition
	}
	return nil
}

func (x *ItemParameterLand) GetAttr() MissionItem_ItemAttr {
	if x != nil {
		return x.Attr
	}
	return MissionItem_ITEM_ATTR_UNSPECIFIED
}

type isItemParameterLand_LandingSelect interface {
	isItemParameterLand_LandingSelect()
}

type ItemParameterLand_PortZone struct {
	PortZone *PortZone `protobuf:"bytes,11,opt,name=port_zone,json=portZone,proto3,oneof"` // ポート利用
}

type ItemParameterLand_Condition_ struct {
	Condition *ItemParameterLand_Condition `protobuf:"bytes,12,opt,name=condition,proto3,oneof"` // 条件の明示的指定
}

func (*ItemParameterLand_PortZone) isItemParameterLand_LandingSelect() {}

func (*ItemParameterLand_Condition_) isItemParameterLand_LandingSelect() {}

// 速度を変更する
// 利用は推奨しない。RESUME時にはデフォルト速度に戻る。
// Waypointのspeedを推奨
type ItemParameterSpeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// m/sec
	Speed float32              `protobuf:"fixed32,1,opt,name=speed,proto3" json:"speed,omitempty"`
	Attr  MissionItem_ItemAttr `protobuf:"varint,20,opt,name=attr,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.MissionItem_ItemAttr" json:"attr,omitempty"`
}

func (x *ItemParameterSpeed) Reset() {
	*x = ItemParameterSpeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemParameterSpeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemParameterSpeed) ProtoMessage() {}

func (x *ItemParameterSpeed) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemParameterSpeed.ProtoReflect.Descriptor instead.
func (*ItemParameterSpeed) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{13}
}

func (x *ItemParameterSpeed) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *ItemParameterSpeed) GetAttr() MissionItem_ItemAttr {
	if x != nil {
		return x.Attr
	}
	return MissionItem_ITEM_ATTR_UNSPECIFIED
}

// 未使用（Not available）
// 利用は推奨しない。RESUME時にはデフォルトヘディングに戻る。
// Waypointのheadingを推奨
type ItemParameterYaw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Angle float32              `protobuf:"fixed32,1,opt,name=angle,proto3" json:"angle,omitempty"`
	Attr  MissionItem_ItemAttr `protobuf:"varint,20,opt,name=attr,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.MissionItem_ItemAttr" json:"attr,omitempty"`
}

func (x *ItemParameterYaw) Reset() {
	*x = ItemParameterYaw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemParameterYaw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemParameterYaw) ProtoMessage() {}

func (x *ItemParameterYaw) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemParameterYaw.ProtoReflect.Descriptor instead.
func (*ItemParameterYaw) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{14}
}

func (x *ItemParameterYaw) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *ItemParameterYaw) GetAttr() MissionItem_ItemAttr {
	if x != nil {
		return x.Attr
	}
	return MissionItem_ITEM_ATTR_UNSPECIFIED
}

// 遅延時間を指定する。未使用（Not available）
type ItemParameterDelay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 遅延時間（秒）
	DelaySec int32                `protobuf:"varint,1,opt,name=delay_sec,json=delaySec,proto3" json:"delay_sec,omitempty"`
	Attr     MissionItem_ItemAttr `protobuf:"varint,30,opt,name=attr,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.MissionItem_ItemAttr" json:"attr,omitempty"`
}

func (x *ItemParameterDelay) Reset() {
	*x = ItemParameterDelay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemParameterDelay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemParameterDelay) ProtoMessage() {}

func (x *ItemParameterDelay) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemParameterDelay.ProtoReflect.Descriptor instead.
func (*ItemParameterDelay) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{15}
}

func (x *ItemParameterDelay) GetDelaySec() int32 {
	if x != nil {
		return x.DelaySec
	}
	return 0
}

func (x *ItemParameterDelay) GetAttr() MissionItem_ItemAttr {
	if x != nil {
		return x.Attr
	}
	return MissionItem_ITEM_ATTR_UNSPECIFIED
}

type ROI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// tagOfGroupのタグ名
	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	// name
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Target:
	//
	//	*ROI_Point
	//	*ROI_Road
	Target isROI_Target `protobuf_oneof:"Target"`
	// number of reroute and goto. avilable only response.
	AppendId int32 `protobuf:"varint,10,opt,name=append_id,json=appendId,proto3" json:"append_id,omitempty"`
}

func (x *ROI) Reset() {
	*x = ROI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ROI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ROI) ProtoMessage() {}

func (x *ROI) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ROI.ProtoReflect.Descriptor instead.
func (*ROI) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{16}
}

func (x *ROI) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ROI) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *ROI) GetTarget() isROI_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *ROI) GetPoint() *_type.Position {
	if x, ok := x.GetTarget().(*ROI_Point); ok {
		return x.Point
	}
	return nil
}

func (x *ROI) GetRoad() *ROI_RoadROI {
	if x, ok := x.GetTarget().(*ROI_Road); ok {
		return x.Road
	}
	return nil
}

func (x *ROI) GetAppendId() int32 {
	if x != nil {
		return x.AppendId
	}
	return 0
}

type isROI_Target interface {
	isROI_Target()
}

type ROI_Point struct {
	// ROIポイント
	Point *_type.Position `protobuf:"bytes,7,opt,name=point,proto3,oneof"`
}

type ROI_Road struct {
	// Road ROI。ROIは開始点のWP（のtagOfGroup）に設定する
	Road *ROI_RoadROI `protobuf:"bytes,8,opt,name=road,proto3,oneof"`
}

func (*ROI_Point) isROI_Target() {}

func (*ROI_Road) isROI_Target() {}

type OragnizationID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"` // 組織識別子
}

func (x *OragnizationID) Reset() {
	*x = OragnizationID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OragnizationID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OragnizationID) ProtoMessage() {}

func (x *OragnizationID) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OragnizationID.ProtoReflect.Descriptor instead.
func (*OragnizationID) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{17}
}

func (x *OragnizationID) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type MissionID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"` // Mission識別子
}

func (x *MissionID) Reset() {
	*x = MissionID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionID) ProtoMessage() {}

func (x *MissionID) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionID.ProtoReflect.Descriptor instead.
func (*MissionID) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{18}
}

func (x *MissionID) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type ProjectID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"` // Project識別子。システムでユニーク。数字の文字列であること（例："1"）
}

func (x *ProjectID) Reset() {
	*x = ProjectID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectID) ProtoMessage() {}

func (x *ProjectID) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectID.ProtoReflect.Descriptor instead.
func (*ProjectID) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{19}
}

func (x *ProjectID) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

// UAVID
type UAVID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"` // 機体識別子
}

func (x *UAVID) Reset() {
	*x = UAVID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UAVID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UAVID) ProtoMessage() {}

func (x *UAVID) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UAVID.ProtoReflect.Descriptor instead.
func (*UAVID) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{20}
}

func (x *UAVID) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

// キー
type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// クアッドキー。日本が含まれるquad_key=13内のみ対応しています
	QuadKey uint64 `protobuf:"varint,1,opt,name=quad_key,json=quadKey,proto3" json:"quad_key,omitempty"`
	// 高度キー
	AltitudeKey uint32 `protobuf:"varint,2,opt,name=altitude_key,json=altitudeKey,proto3" json:"altitude_key,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{21}
}

func (x *Key) GetQuadKey() uint64 {
	if x != nil {
		return x.QuadKey
	}
	return 0
}

func (x *Key) GetAltitudeKey() uint32 {
	if x != nil {
		return x.AltitudeKey
	}
	return 0
}

// オプションの時刻
type OptionalTimeStamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasValue  bool                   `protobuf:"varint,1,opt,name=has_value,json=hasValue,proto3" json:"has_value,omitempty"`   // 値を持っているか否か。time_stampが無い場合はhas_value=falseです
	TimeStamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"` // 時刻
}

func (x *OptionalTimeStamp) Reset() {
	*x = OptionalTimeStamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalTimeStamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalTimeStamp) ProtoMessage() {}

func (x *OptionalTimeStamp) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalTimeStamp.ProtoReflect.Descriptor instead.
func (*OptionalTimeStamp) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{22}
}

func (x *OptionalTimeStamp) GetHasValue() bool {
	if x != nil {
		return x.HasValue
	}
	return false
}

func (x *OptionalTimeStamp) GetTimeStamp() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeStamp
	}
	return nil
}

type SolidModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 原点、錐の頂点はこの直上に来ます
	Origin *_type.Position `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	// 東に対するobjファイルのx軸の角度[°]。右手系です
	Angle float64 `protobuf:"fixed64,2,opt,name=angle,proto3" json:"angle,omitempty"`
	// 高さ[m]
	Height float64 `protobuf:"fixed64,3,opt,name=height,proto3" json:"height,omitempty"`
	// サブクラス
	//
	// Types that are assignable to Subclass:
	//
	//	*SolidModel_PolygonalPillar_
	//	*SolidModel_PolygonalPyramid_
	//	*SolidModel_Column_
	//	*SolidModel_Cone_
	//	*SolidModel_RightTrianglePillar_
	Subclass isSolidModel_Subclass `protobuf_oneof:"subclass"`
}

func (x *SolidModel) Reset() {
	*x = SolidModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolidModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolidModel) ProtoMessage() {}

func (x *SolidModel) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolidModel.ProtoReflect.Descriptor instead.
func (*SolidModel) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{23}
}

func (x *SolidModel) GetOrigin() *_type.Position {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *SolidModel) GetAngle() float64 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *SolidModel) GetHeight() float64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (m *SolidModel) GetSubclass() isSolidModel_Subclass {
	if m != nil {
		return m.Subclass
	}
	return nil
}

func (x *SolidModel) GetPolygonalPillar() *SolidModel_PolygonalPillar {
	if x, ok := x.GetSubclass().(*SolidModel_PolygonalPillar_); ok {
		return x.PolygonalPillar
	}
	return nil
}

func (x *SolidModel) GetPolygonalPyramid() *SolidModel_PolygonalPyramid {
	if x, ok := x.GetSubclass().(*SolidModel_PolygonalPyramid_); ok {
		return x.PolygonalPyramid
	}
	return nil
}

func (x *SolidModel) GetColumn() *SolidModel_Column {
	if x, ok := x.GetSubclass().(*SolidModel_Column_); ok {
		return x.Column
	}
	return nil
}

func (x *SolidModel) GetCone() *SolidModel_Cone {
	if x, ok := x.GetSubclass().(*SolidModel_Cone_); ok {
		return x.Cone
	}
	return nil
}

func (x *SolidModel) GetRightTrianglePillar() *SolidModel_RightTrianglePillar {
	if x, ok := x.GetSubclass().(*SolidModel_RightTrianglePillar_); ok {
		return x.RightTrianglePillar
	}
	return nil
}

type isSolidModel_Subclass interface {
	isSolidModel_Subclass()
}

type SolidModel_PolygonalPillar_ struct {
	// 角柱
	PolygonalPillar *SolidModel_PolygonalPillar `protobuf:"bytes,4,opt,name=polygonal_pillar,json=polygonalPillar,proto3,oneof"`
}

type SolidModel_PolygonalPyramid_ struct {
	// 角錐
	PolygonalPyramid *SolidModel_PolygonalPyramid `protobuf:"bytes,5,opt,name=polygonal_pyramid,json=polygonalPyramid,proto3,oneof"`
}

type SolidModel_Column_ struct {
	// 円柱
	Column *SolidModel_Column `protobuf:"bytes,6,opt,name=column,proto3,oneof"`
}

type SolidModel_Cone_ struct {
	// 円錐
	Cone *SolidModel_Cone `protobuf:"bytes,7,opt,name=cone,proto3,oneof"`
}

type SolidModel_RightTrianglePillar_ struct {
	// 直角三角柱を倒したもの
	RightTrianglePillar *SolidModel_RightTrianglePillar `protobuf:"bytes,8,opt,name=right_triangle_pillar,json=rightTrianglePillar,proto3,oneof"`
}

func (*SolidModel_PolygonalPillar_) isSolidModel_Subclass() {}

func (*SolidModel_PolygonalPyramid_) isSolidModel_Subclass() {}

func (*SolidModel_Column_) isSolidModel_Subclass() {}

func (*SolidModel_Cone_) isSolidModel_Subclass() {}

func (*SolidModel_RightTrianglePillar_) isSolidModel_Subclass() {}

// 二次元直交座標
type Cartesian2D struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// x座標[m]
	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	// y座標[m]
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Cartesian2D) Reset() {
	*x = Cartesian2D{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cartesian2D) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cartesian2D) ProtoMessage() {}

func (x *Cartesian2D) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cartesian2D.ProtoReflect.Descriptor instead.
func (*Cartesian2D) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{24}
}

func (x *Cartesian2D) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Cartesian2D) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type KML struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 本文
	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *KML) Reset() {
	*x = KML{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KML) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KML) ProtoMessage() {}

func (x *KML) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KML.ProtoReflect.Descriptor instead.
func (*KML) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{25}
}

func (x *KML) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

// ポートリクエストヘッダー
type PortHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 組織ID(所有組織)
	OrganizationsId int64 `protobuf:"varint,1,opt,name=organizations_id,json=organizationsId,proto3" json:"organizations_id,omitempty"`
	// グループID
	GroupId int64 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// 機体ID(文字列)
	UavId string `protobuf:"bytes,3,opt,name=uav_id,json=uavId,proto3" json:"uav_id,omitempty"`
	// 有効期間始点 UNIX時間
	StartTime *int64 `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	// 有効期間終点 UNIX時間
	EndTime *int64 `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
}

func (x *PortHeader) Reset() {
	*x = PortHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortHeader) ProtoMessage() {}

func (x *PortHeader) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortHeader.ProtoReflect.Descriptor instead.
func (*PortHeader) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{26}
}

func (x *PortHeader) GetOrganizationsId() int64 {
	if x != nil {
		return x.OrganizationsId
	}
	return 0
}

func (x *PortHeader) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *PortHeader) GetUavId() string {
	if x != nil {
		return x.UavId
	}
	return ""
}

func (x *PortHeader) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *PortHeader) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

// ポート
type Port struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ポートID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 組織ID
	OrganizationsId int64 `protobuf:"varint,2,opt,name=organizations_id,json=organizationsId,proto3" json:"organizations_id,omitempty"`
	// グループID
	GroupId int64 `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// ポートの種別 true:private false:public
	IsPrivate bool `protobuf:"varint,4,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	// 緊急着陸ポート種別 true:緊急着陸ポート/ flase:通常ポート
	IsEmergency bool `protobuf:"varint,5,opt,name=is_emergency,json=isEmergency,proto3" json:"is_emergency,omitempty"`
	// 名称
	Name *string `protobuf:"bytes,6,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// タグ
	Tag *string `protobuf:"bytes,7,opt,name=tag,proto3,oneof" json:"tag,omitempty"`
	// ポート提供者
	Provider *string `protobuf:"bytes,8,opt,name=provider,proto3,oneof" json:"provider,omitempty"`
	// ポート形状をSolidModeで登録(角柱(PolygonalPillar)のみ登録可能)
	Port *SolidModel `protobuf:"bytes,9,opt,name=port,proto3" json:"port,omitempty"`
	// 有効期間始点
	StartTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 有効期間終点
	EndTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 説明文
	Description string `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	// ポートの高さ
	Altitude *_type.Altitude `protobuf:"bytes,13,opt,name=altitude,proto3" json:"altitude,omitempty"`
}

func (x *Port) Reset() {
	*x = Port{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{27}
}

func (x *Port) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Port) GetOrganizationsId() int64 {
	if x != nil {
		return x.OrganizationsId
	}
	return 0
}

func (x *Port) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Port) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *Port) GetIsEmergency() bool {
	if x != nil {
		return x.IsEmergency
	}
	return false
}

func (x *Port) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Port) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *Port) GetProvider() string {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ""
}

func (x *Port) GetPort() *SolidModel {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *Port) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Port) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Port) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Port) GetAltitude() *_type.Altitude {
	if x != nil {
		return x.Altitude
	}
	return nil
}

type SearchSpace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxCoordinate *_type.Coordinate `protobuf:"bytes,1,opt,name=max_coordinate,json=maxCoordinate,proto3" json:"max_coordinate,omitempty"`
	MinCoordinate *_type.Coordinate `protobuf:"bytes,2,opt,name=min_coordinate,json=minCoordinate,proto3" json:"min_coordinate,omitempty"`
}

func (x *SearchSpace) Reset() {
	*x = SearchSpace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSpace) ProtoMessage() {}

func (x *SearchSpace) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSpace.ProtoReflect.Descriptor instead.
func (*SearchSpace) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{28}
}

func (x *SearchSpace) GetMaxCoordinate() *_type.Coordinate {
	if x != nil {
		return x.MaxCoordinate
	}
	return nil
}

func (x *SearchSpace) GetMinCoordinate() *_type.Coordinate {
	if x != nil {
		return x.MinCoordinate
	}
	return nil
}

// ポートロケーション
type PortLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ポート識別子(3月開発時はID=0)
	PortId int64 `protobuf:"varint,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	// ポート区間(離陸/着陸)
	Interval PortInterval `protobuf:"varint,2,opt,name=interval,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.PortInterval" json:"interval,omitempty"`
	// ポート名
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// タグ
	Tag string `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
	// 離着陸機体位置
	UavPosition *_type.Position `protobuf:"bytes,5,opt,name=uav_position,json=uavPosition,proto3" json:"uav_position,omitempty"`
	// 離陸上昇高度(m)
	TakeoffAltitude float32 `protobuf:"fixed32,6,opt,name=takeoff_altitude,json=takeoffAltitude,proto3" json:"takeoff_altitude,omitempty"`
	// 最近接点位置
	ClosestPosition *_type.Position `protobuf:"bytes,7,opt,name=closest_position,json=closestPosition,proto3" json:"closest_position,omitempty"`
	// 本構造体のデータを持つか否かのフラグ(true:持つ/false:持たない)
	HasValue bool `protobuf:"varint,8,opt,name=has_value,json=hasValue,proto3" json:"has_value,omitempty"`
	// 有効期間始点 UNIX時間
	StartTime int64 `protobuf:"varint,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 有効期間終点 UNIX時間
	EndTime int64 `protobuf:"varint,10,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// パス生成結果
	Paths []*ResultPathForPlan `protobuf:"bytes,11,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *PortLocation) Reset() {
	*x = PortLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortLocation) ProtoMessage() {}

func (x *PortLocation) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortLocation.ProtoReflect.Descriptor instead.
func (*PortLocation) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{29}
}

func (x *PortLocation) GetPortId() int64 {
	if x != nil {
		return x.PortId
	}
	return 0
}

func (x *PortLocation) GetInterval() PortInterval {
	if x != nil {
		return x.Interval
	}
	return PortInterval_PORT_INTERVAL_TAKEOFF
}

func (x *PortLocation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PortLocation) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *PortLocation) GetUavPosition() *_type.Position {
	if x != nil {
		return x.UavPosition
	}
	return nil
}

func (x *PortLocation) GetTakeoffAltitude() float32 {
	if x != nil {
		return x.TakeoffAltitude
	}
	return 0
}

func (x *PortLocation) GetClosestPosition() *_type.Position {
	if x != nil {
		return x.ClosestPosition
	}
	return nil
}

func (x *PortLocation) GetHasValue() bool {
	if x != nil {
		return x.HasValue
	}
	return false
}

func (x *PortLocation) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PortLocation) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *PortLocation) GetPaths() []*ResultPathForPlan {
	if x != nil {
		return x.Paths
	}
	return nil
}

// パス生成結果
type ResultPathForPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// クリアランス
	Clearance float32 `protobuf:"fixed32,3,opt,name=clearance,proto3" json:"clearance,omitempty"`
	// 有効期間始点 UNIX時間
	StartTime int64 `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 有効期間終点 UNIX時間
	EndTime int64 `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 飛行計画予約方法(推奨/登録)
	Method PlanReservationMethod `protobuf:"varint,6,opt,name=method,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.PlanReservationMethod" json:"method,omitempty"`
	// 無視する予約されたパスIDリスト
	IgnorePathIds []string `protobuf:"bytes,7,rep,name=ignore_path_ids,json=ignorePathIds,proto3" json:"ignore_path_ids,omitempty"`
	// パスのコスト値
	Cost float64 `protobuf:"fixed64,8,opt,name=cost,proto3" json:"cost,omitempty"`
	// 3Dタイルデータ群(oneofでPathの場合に設定)
	Tiles []*spatial.SpatialIdentification `protobuf:"bytes,9,rep,name=tiles,proto3" json:"tiles,omitempty"`
	// INSERT, BRANCH時に新規作成されたPathについてはTrue
	Added bool `protobuf:"varint,10,opt,name=added,proto3" json:"added,omitempty"`
	// Types that are assignable to Result:
	//
	//	*ResultPathForPlan_Path_
	//	*ResultPathForPlan_InBarrierError_
	//	*ResultPathForPlan_InNodataError
	//	*ResultPathForPlan_NoPathError_
	//	*ResultPathForPlan_UnreachableErro
	Result isResultPathForPlan_Result `protobuf_oneof:"result"`
}

func (x *ResultPathForPlan) Reset() {
	*x = ResultPathForPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultPathForPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultPathForPlan) ProtoMessage() {}

func (x *ResultPathForPlan) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultPathForPlan.ProtoReflect.Descriptor instead.
func (*ResultPathForPlan) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{30}
}

func (x *ResultPathForPlan) GetClearance() float32 {
	if x != nil {
		return x.Clearance
	}
	return 0
}

func (x *ResultPathForPlan) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ResultPathForPlan) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ResultPathForPlan) GetMethod() PlanReservationMethod {
	if x != nil {
		return x.Method
	}
	return PlanReservationMethod_PLAN_METHOD_RECOMMEND
}

func (x *ResultPathForPlan) GetIgnorePathIds() []string {
	if x != nil {
		return x.IgnorePathIds
	}
	return nil
}

func (x *ResultPathForPlan) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *ResultPathForPlan) GetTiles() []*spatial.SpatialIdentification {
	if x != nil {
		return x.Tiles
	}
	return nil
}

func (x *ResultPathForPlan) GetAdded() bool {
	if x != nil {
		return x.Added
	}
	return false
}

func (m *ResultPathForPlan) GetResult() isResultPathForPlan_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ResultPathForPlan) GetPath() *ResultPathForPlan_Path {
	if x, ok := x.GetResult().(*ResultPathForPlan_Path_); ok {
		return x.Path
	}
	return nil
}

func (x *ResultPathForPlan) GetInBarrierError() *ResultPathForPlan_InBarrierError {
	if x, ok := x.GetResult().(*ResultPathForPlan_InBarrierError_); ok {
		return x.InBarrierError
	}
	return nil
}

func (x *ResultPathForPlan) GetInNodataError() *ResultPathForPlan_InNoDataError {
	if x, ok := x.GetResult().(*ResultPathForPlan_InNodataError); ok {
		return x.InNodataError
	}
	return nil
}

func (x *ResultPathForPlan) GetNoPathError() *ResultPathForPlan_NoPathError {
	if x, ok := x.GetResult().(*ResultPathForPlan_NoPathError_); ok {
		return x.NoPathError
	}
	return nil
}

func (x *ResultPathForPlan) GetUnreachableErro() *ResultPathForPlan_UnreachableError {
	if x, ok := x.GetResult().(*ResultPathForPlan_UnreachableErro); ok {
		return x.UnreachableErro
	}
	return nil
}

type isResultPathForPlan_Result interface {
	isResultPathForPlan_Result()
}

type ResultPathForPlan_Path_ struct {
	// パス情報
	Path *ResultPathForPlan_Path `protobuf:"bytes,21,opt,name=path,proto3,oneof"`
}

type ResultPathForPlan_InBarrierError_ struct {
	// 障害物衝突するパス
	InBarrierError *ResultPathForPlan_InBarrierError `protobuf:"bytes,22,opt,name=in_barrier_error,json=inBarrierError,proto3,oneof"`
}

type ResultPathForPlan_InNodataError struct {
	// データ存在せずにパス生成不可
	InNodataError *ResultPathForPlan_InNoDataError `protobuf:"bytes,23,opt,name=in_nodata_error,json=inNodataError,proto3,oneof"`
}

type ResultPathForPlan_NoPathError_ struct {
	// 全て障害物やパスで埋められパス生成ができない
	NoPathError *ResultPathForPlan_NoPathError `protobuf:"bytes,24,opt,name=no_path_error,json=noPathError,proto3,oneof"`
}

type ResultPathForPlan_UnreachableErro struct {
	// パス生成で次WPに到達できない
	UnreachableErro *ResultPathForPlan_UnreachableError `protobuf:"bytes,25,opt,name=unreachable_erro,json=unreachableErro,proto3,oneof"`
}

func (*ResultPathForPlan_Path_) isResultPathForPlan_Result() {}

func (*ResultPathForPlan_InBarrierError_) isResultPathForPlan_Result() {}

func (*ResultPathForPlan_InNodataError) isResultPathForPlan_Result() {}

func (*ResultPathForPlan_NoPathError_) isResultPathForPlan_Result() {}

func (*ResultPathForPlan_UnreachableErro) isResultPathForPlan_Result() {}

// スポット
type Spot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                              // スポットID
	PortId   int64           `protobuf:"varint,2,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`        // 親ポートID
	Name     *string         `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`                     // 名称
	Tag      *string         `protobuf:"bytes,5,opt,name=tag,proto3,oneof" json:"tag,omitempty"`                       // タグ
	IsUsed   bool            `protobuf:"varint,6,opt,name=is_used,json=isUsed,proto3" json:"is_used,omitempty"`        // スポット利用状態(true:利用中 / false:未利用) Create時は無効
	SpotSize float32         `protobuf:"fixed32,7,opt,name=spot_size,json=spotSize,proto3" json:"spot_size,omitempty"` // スポットの半径(m)
	Center   *_type.Position `protobuf:"bytes,8,opt,name=center,proto3" json:"center,omitempty"`                       // スポット中心座標　TODO: Port内の座標確認をどちらのサーバーでやるか確認
}

func (x *Spot) Reset() {
	*x = Spot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spot) ProtoMessage() {}

func (x *Spot) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spot.ProtoReflect.Descriptor instead.
func (*Spot) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{31}
}

func (x *Spot) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Spot) GetPortId() int64 {
	if x != nil {
		return x.PortId
	}
	return 0
}

func (x *Spot) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Spot) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *Spot) GetIsUsed() bool {
	if x != nil {
		return x.IsUsed
	}
	return false
}

func (x *Spot) GetSpotSize() float32 {
	if x != nil {
		return x.SpotSize
	}
	return 0
}

func (x *Spot) GetCenter() *_type.Position {
	if x != nil {
		return x.Center
	}
	return nil
}

// ルート情報
type RouteObjectForPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                              // ルートID
	ReservedRouteId string                 `protobuf:"bytes,2,opt,name=reserved_route_id,json=reservedRouteId,proto3" json:"reserved_route_id,omitempty"`                            // ルート予約ID
	OrganizationsId int64                  `protobuf:"varint,3,opt,name=organizations_id,json=organizationsId,proto3" json:"organizations_id,omitempty"`                             // 組織ID(所有組織)
	GroupId         int64                  `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`                                                     // グループID
	UavId           string                 `protobuf:"bytes,5,opt,name=uav_id,json=uavId,proto3" json:"uav_id,omitempty"`                                                            // 機体ID(文字列)
	Interval        RouteInterval          `protobuf:"varint,6,opt,name=interval,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.RouteInterval" json:"interval,omitempty"` // ルート種別
	TotalCost       float64                `protobuf:"fixed64,7,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`                                              // ルートのコスト値(パスのコスト値合計)
	StartTime       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                // 有効期間始点 UNIX時間
	EndTime         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                      // 有効期間終点 UNIX時間
	Paths           []*ResultPathForPlan   `protobuf:"bytes,10,rep,name=paths,proto3" json:"paths,omitempty"`                                                                        // パス生成結果
}

func (x *RouteObjectForPlan) Reset() {
	*x = RouteObjectForPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteObjectForPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteObjectForPlan) ProtoMessage() {}

func (x *RouteObjectForPlan) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteObjectForPlan.ProtoReflect.Descriptor instead.
func (*RouteObjectForPlan) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{32}
}

func (x *RouteObjectForPlan) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RouteObjectForPlan) GetReservedRouteId() string {
	if x != nil {
		return x.ReservedRouteId
	}
	return ""
}

func (x *RouteObjectForPlan) GetOrganizationsId() int64 {
	if x != nil {
		return x.OrganizationsId
	}
	return 0
}

func (x *RouteObjectForPlan) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *RouteObjectForPlan) GetUavId() string {
	if x != nil {
		return x.UavId
	}
	return ""
}

func (x *RouteObjectForPlan) GetInterval() RouteInterval {
	if x != nil {
		return x.Interval
	}
	return RouteInterval_ROUTE_INTERVAL_ROUTE
}

func (x *RouteObjectForPlan) GetTotalCost() float64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *RouteObjectForPlan) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *RouteObjectForPlan) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *RouteObjectForPlan) GetPaths() []*ResultPathForPlan {
	if x != nil {
		return x.Paths
	}
	return nil
}

type ItemParameterTakeoff_Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TakeoffAltitude *_type.Altitude `protobuf:"bytes,1,opt,name=takeoff_altitude,json=takeoffAltitude,proto3,oneof" json:"takeoff_altitude,omitempty"`
}

func (x *ItemParameterTakeoff_Condition) Reset() {
	*x = ItemParameterTakeoff_Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemParameterTakeoff_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemParameterTakeoff_Condition) ProtoMessage() {}

func (x *ItemParameterTakeoff_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemParameterTakeoff_Condition.ProtoReflect.Descriptor instead.
func (*ItemParameterTakeoff_Condition) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ItemParameterTakeoff_Condition) GetTakeoffAltitude() *_type.Altitude {
	if x != nil {
		return x.TakeoffAltitude
	}
	return nil
}

type CameraControl_Angle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 無効（absoluteのみ）
	Mode   CameraControl_ControlMode `protobuf:"varint,1,opt,name=mode,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.CameraControl_ControlMode" json:"mode,omitempty"`
	Degree float32                   `protobuf:"fixed32,2,opt,name=degree,proto3" json:"degree,omitempty"`
}

func (x *CameraControl_Angle) Reset() {
	*x = CameraControl_Angle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CameraControl_Angle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraControl_Angle) ProtoMessage() {}

func (x *CameraControl_Angle) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraControl_Angle.ProtoReflect.Descriptor instead.
func (*CameraControl_Angle) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{10, 0}
}

func (x *CameraControl_Angle) GetMode() CameraControl_ControlMode {
	if x != nil {
		return x.Mode
	}
	return CameraControl_DIFFERENTIAL
}

func (x *CameraControl_Angle) GetDegree() float32 {
	if x != nil {
		return x.Degree
	}
	return 0
}

// 無効（absoluteのみ）
type CameraControl_ZoomControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode          CameraControl_ControlMode `protobuf:"varint,1,opt,name=mode,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.CameraControl_ControlMode" json:"mode,omitempty"`
	Magnification float32                   `protobuf:"fixed32,2,opt,name=magnification,proto3" json:"magnification,omitempty"`
}

func (x *CameraControl_ZoomControl) Reset() {
	*x = CameraControl_ZoomControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CameraControl_ZoomControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraControl_ZoomControl) ProtoMessage() {}

func (x *CameraControl_ZoomControl) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraControl_ZoomControl.ProtoReflect.Descriptor instead.
func (*CameraControl_ZoomControl) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{10, 1}
}

func (x *CameraControl_ZoomControl) GetMode() CameraControl_ControlMode {
	if x != nil {
		return x.Mode
	}
	return CameraControl_DIFFERENTIAL
}

func (x *CameraControl_ZoomControl) GetMagnification() float32 {
	if x != nil {
		return x.Magnification
	}
	return 0
}

type ItemParameterLand_Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode             ItemParameterLand_LandMode `protobuf:"varint,1,opt,name=mode,proto3,enum=trajectory.trajectory_gcs_service.protocol.v1.ItemParameterLand_LandMode" json:"mode,omitempty"`
	ApproachAltitude *_type.Altitude            `protobuf:"bytes,2,opt,name=approach_altitude,json=approachAltitude,proto3,oneof" json:"approach_altitude,omitempty"` // 垂直降下を始める高度（着陸地点からの地上高。DEMが設定されていない地域でのAGL指定はエラー）
}

func (x *ItemParameterLand_Condition) Reset() {
	*x = ItemParameterLand_Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemParameterLand_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemParameterLand_Condition) ProtoMessage() {}

func (x *ItemParameterLand_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemParameterLand_Condition.ProtoReflect.Descriptor instead.
func (*ItemParameterLand_Condition) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ItemParameterLand_Condition) GetMode() ItemParameterLand_LandMode {
	if x != nil {
		return x.Mode
	}
	return ItemParameterLand_LAND_MODE_UNSPECIFIED
}

func (x *ItemParameterLand_Condition) GetApproachAltitude() *_type.Altitude {
	if x != nil {
		return x.ApproachAltitude
	}
	return nil
}

type ROI_RoadROI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *_type.Position `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *_type.Position `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	// 起点WPとターゲットの距離からの差
	Offset float32 `protobuf:"fixed32,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ROI_RoadROI) Reset() {
	*x = ROI_RoadROI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ROI_RoadROI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ROI_RoadROI) ProtoMessage() {}

func (x *ROI_RoadROI) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ROI_RoadROI.ProtoReflect.Descriptor instead.
func (*ROI_RoadROI) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{16, 0}
}

func (x *ROI_RoadROI) GetStart() *_type.Position {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ROI_RoadROI) GetEnd() *_type.Position {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *ROI_RoadROI) GetOffset() float32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// 角柱
type SolidModel_PolygonalPillar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 底面。右手系です。閉じている必要はありません。自己交叉してはいけません。
	Base []*Cartesian2D `protobuf:"bytes,1,rep,name=base,proto3" json:"base,omitempty"`
}

func (x *SolidModel_PolygonalPillar) Reset() {
	*x = SolidModel_PolygonalPillar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolidModel_PolygonalPillar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolidModel_PolygonalPillar) ProtoMessage() {}

func (x *SolidModel_PolygonalPillar) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolidModel_PolygonalPillar.ProtoReflect.Descriptor instead.
func (*SolidModel_PolygonalPillar) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{23, 0}
}

func (x *SolidModel_PolygonalPillar) GetBase() []*Cartesian2D {
	if x != nil {
		return x.Base
	}
	return nil
}

// 角錐
type SolidModel_PolygonalPyramid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 底面。右手系です。閉じている必要はありません。自己交叉してはいけません。
	Base []*Cartesian2D `protobuf:"bytes,1,rep,name=base,proto3" json:"base,omitempty"`
}

func (x *SolidModel_PolygonalPyramid) Reset() {
	*x = SolidModel_PolygonalPyramid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolidModel_PolygonalPyramid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolidModel_PolygonalPyramid) ProtoMessage() {}

func (x *SolidModel_PolygonalPyramid) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolidModel_PolygonalPyramid.ProtoReflect.Descriptor instead.
func (*SolidModel_PolygonalPyramid) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{23, 1}
}

func (x *SolidModel_PolygonalPyramid) GetBase() []*Cartesian2D {
	if x != nil {
		return x.Base
	}
	return nil
}

// 円柱
type SolidModel_Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// xとyの半径
	Radii *Cartesian2D `protobuf:"bytes,1,opt,name=radii,proto3" json:"radii,omitempty"`
}

func (x *SolidModel_Column) Reset() {
	*x = SolidModel_Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolidModel_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolidModel_Column) ProtoMessage() {}

func (x *SolidModel_Column) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolidModel_Column.ProtoReflect.Descriptor instead.
func (*SolidModel_Column) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{23, 2}
}

func (x *SolidModel_Column) GetRadii() *Cartesian2D {
	if x != nil {
		return x.Radii
	}
	return nil
}

// 円錐
type SolidModel_Cone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// xとyの半径
	Radii *Cartesian2D `protobuf:"bytes,1,opt,name=radii,proto3" json:"radii,omitempty"`
}

func (x *SolidModel_Cone) Reset() {
	*x = SolidModel_Cone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolidModel_Cone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolidModel_Cone) ProtoMessage() {}

func (x *SolidModel_Cone) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolidModel_Cone.ProtoReflect.Descriptor instead.
func (*SolidModel_Cone) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{23, 3}
}

func (x *SolidModel_Cone) GetRadii() *Cartesian2D {
	if x != nil {
		return x.Radii
	}
	return nil
}

// 直角三角柱を倒したもの。原点とy切片の頂点の直上に峰が来ます
type SolidModel_RightTrianglePillar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 底面。長方形です
	Size *Cartesian2D `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *SolidModel_RightTrianglePillar) Reset() {
	*x = SolidModel_RightTrianglePillar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolidModel_RightTrianglePillar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolidModel_RightTrianglePillar) ProtoMessage() {}

func (x *SolidModel_RightTrianglePillar) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolidModel_RightTrianglePillar.ProtoReflect.Descriptor instead.
func (*SolidModel_RightTrianglePillar) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{23, 4}
}

func (x *SolidModel_RightTrianglePillar) GetSize() *Cartesian2D {
	if x != nil {
		return x.Size
	}
	return nil
}

// パス
type ResultPathForPlan_Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 安全が保証されたパス
	Path *Mission `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ResultPathForPlan_Path) Reset() {
	*x = ResultPathForPlan_Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultPathForPlan_Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultPathForPlan_Path) ProtoMessage() {}

func (x *ResultPathForPlan_Path) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultPathForPlan_Path.ProtoReflect.Descriptor instead.
func (*ResultPathForPlan_Path) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{30, 0}
}

func (x *ResultPathForPlan_Path) GetPath() *Mission {
	if x != nil {
		return x.Path
	}
	return nil
}

// 障害物に衝突してしまうエラー
type ResultPathForPlan_InBarrierError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 危険なパス
	DangerPath *Mission `protobuf:"bytes,1,opt,name=danger_path,json=dangerPath,proto3" json:"danger_path,omitempty"`
	// 障害物に衝突してしまう位置
	Position *_type.Position `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *ResultPathForPlan_InBarrierError) Reset() {
	*x = ResultPathForPlan_InBarrierError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultPathForPlan_InBarrierError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultPathForPlan_InBarrierError) ProtoMessage() {}

func (x *ResultPathForPlan_InBarrierError) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultPathForPlan_InBarrierError.ProtoReflect.Descriptor instead.
func (*ResultPathForPlan_InBarrierError) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{30, 1}
}

func (x *ResultPathForPlan_InBarrierError) GetDangerPath() *Mission {
	if x != nil {
		return x.DangerPath
	}
	return nil
}

func (x *ResultPathForPlan_InBarrierError) GetPosition() *_type.Position {
	if x != nil {
		return x.Position
	}
	return nil
}

// データが無いエラー
type ResultPathForPlan_InNoDataError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 安全が保障されないパス
	UnsafePath *Mission `protobuf:"bytes,1,opt,name=unsafe_path,json=unsafePath,proto3" json:"unsafe_path,omitempty"`
	// データが無い位置
	Position *_type.Position `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *ResultPathForPlan_InNoDataError) Reset() {
	*x = ResultPathForPlan_InNoDataError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultPathForPlan_InNoDataError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultPathForPlan_InNoDataError) ProtoMessage() {}

func (x *ResultPathForPlan_InNoDataError) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultPathForPlan_InNoDataError.ProtoReflect.Descriptor instead.
func (*ResultPathForPlan_InNoDataError) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{30, 2}
}

func (x *ResultPathForPlan_InNoDataError) GetUnsafePath() *Mission {
	if x != nil {
		return x.UnsafePath
	}
	return nil
}

func (x *ResultPathForPlan_InNoDataError) GetPosition() *_type.Position {
	if x != nil {
		return x.Position
	}
	return nil
}

// パスが存在しないエラー
type ResultPathForPlan_NoPathError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 存在しないパス
	DangerPath *Mission `protobuf:"bytes,1,opt,name=danger_path,json=dangerPath,proto3" json:"danger_path,omitempty"`
}

func (x *ResultPathForPlan_NoPathError) Reset() {
	*x = ResultPathForPlan_NoPathError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultPathForPlan_NoPathError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultPathForPlan_NoPathError) ProtoMessage() {}

func (x *ResultPathForPlan_NoPathError) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultPathForPlan_NoPathError.ProtoReflect.Descriptor instead.
func (*ResultPathForPlan_NoPathError) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{30, 3}
}

func (x *ResultPathForPlan_NoPathError) GetDangerPath() *Mission {
	if x != nil {
		return x.DangerPath
	}
	return nil
}

// パス到達不能エラー
type ResultPathForPlan_UnreachableError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 到達できないパス
	UnreachablePath *Mission `protobuf:"bytes,1,opt,name=unreachable_path,json=unreachablePath,proto3" json:"unreachable_path,omitempty"`
}

func (x *ResultPathForPlan_UnreachableError) Reset() {
	*x = ResultPathForPlan_UnreachableError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultPathForPlan_UnreachableError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultPathForPlan_UnreachableError) ProtoMessage() {}

func (x *ResultPathForPlan_UnreachableError) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultPathForPlan_UnreachableError.ProtoReflect.Descriptor instead.
func (*ResultPathForPlan_UnreachableError) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP(), []int{30, 4}
}

func (x *ResultPathForPlan_UnreachableError) GetUnreachablePath() *Mission {
	if x != nil {
		return x.UnreachablePath
	}
	return nil
}

var File_trajectory_trajectory_gcs_service_protocol_v1_resource_proto protoreflect.FileDescriptor

var file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2d,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x75, 0x61, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x2f, 0x76, 0x32, 0x2f, 0x73,
	0x64, 0x73, 0x70, 0x5f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x01, 0x0a, 0x0d,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x64, 0x0a,
	0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x46, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x22, 0x21, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x57, 0x49, 0x44, 0x45, 0x10, 0x01, 0x22, 0xd6, 0x01, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x31,
	0x0a, 0x06, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x63, 0x63, 0x75, 0x70,
	0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0xf7, 0x02, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x59, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x45, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74,
	0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x4c,
	0x0a, 0x04, 0x74, 0x72, 0x6a, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74,
	0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x74, 0x72, 0x6a, 0x78, 0x12, 0x12, 0x0a, 0x03,
	0x63, 0x73, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x63, 0x73, 0x76,
	0x12, 0x23, 0x0a, 0x0c, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x0f, 0x0a, 0x0b, 0x54, 0x52, 0x4a, 0x58, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49, 0x54, 0x43, 0x48, 0x49, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41,
	0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x41, 0x56, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0x02, 0x42, 0x0f, 0x0a, 0x0d, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xcb, 0x04, 0x0a, 0x17, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x65, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x22, 0xb0, 0x03, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x15, 0x0a, 0x11, 0x53, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x54, 0x49, 0x4e,
	0x55, 0x45, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e,
	0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x10, 0x09, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x0b, 0x12, 0x12,
	0x0a, 0x0e, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x54, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x0d, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45, 0x4d, 0x50, 0x54,
	0x59, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x0e, 0x12, 0x11, 0x0a, 0x0d, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x46, 0x43, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x10, 0x0f, 0x12, 0x23,
	0x0a, 0x1f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x46, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x50,
	0x41, 0x54, 0x48, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x41, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x10, 0x33, 0x12, 0x24, 0x0a, 0x20, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x46, 0x4c, 0x49,
	0x47, 0x48, 0x54, 0x5f, 0x50, 0x41, 0x54, 0x48, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x10, 0x34, 0x12, 0x25, 0x0a, 0x21, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x46, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x50, 0x41, 0x54, 0x48, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x10, 0x35,
	0x12, 0x21, 0x0a, 0x1d, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x46, 0x4c, 0x49, 0x47, 0x48, 0x54,
	0x5f, 0x50, 0x41, 0x54, 0x48, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x41, 0x52, 0x45,
	0x41, 0x10, 0x36, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x46, 0x4c, 0x49,
	0x47, 0x48, 0x54, 0x5f, 0x50, 0x41, 0x54, 0x48, 0x5f, 0x49, 0x4c, 0x4c, 0x49, 0x47, 0x41, 0x4c,
	0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x37, 0x12, 0x1a, 0x0a, 0x16, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x43, 0x10, 0x3c, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x46, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x50, 0x41, 0x54, 0x48, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x32, 0x22, 0x55, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75,
	0x62, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xd6,
	0x03, 0x0a, 0x07, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x08, 0x65, 0x74,
	0x61, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x74,
	0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x74, 0x61, 0x41, 0x74, 0x74, 0x72, 0x52, 0x07, 0x65, 0x74,
	0x61, 0x41, 0x74, 0x74, 0x72, 0x12, 0x5b, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x61,
	0x72, 0x72, 0x61, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x12, 0x51, 0x0a, 0x0a, 0x72, 0x6f, 0x69, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67,
	0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x4f, 0x49, 0x52, 0x09, 0x72, 0x6f, 0x69, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x50, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
	0x74, 0x72, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22, 0x29, 0x0a, 0x07, 0x45, 0x74, 0x61, 0x41, 0x74,
	0x74, 0x72, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x54, 0x41, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45,
	0x53, 0x53, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x54, 0x41, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x10, 0x01, 0x4a, 0x04, 0x08, 0x0b, 0x10, 0x0c, 0x4a, 0x04, 0x08, 0x0d, 0x10, 0x0e, 0x4a, 0x04,
	0x08, 0x0e, 0x10, 0x0f, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x11, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x73, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x73, 0x22, 0xf9, 0x06, 0x0a, 0x0b, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a,
	0x07, 0x74, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43,
	0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x61, 0x6b, 0x65,
	0x6f, 0x66, 0x66, 0x48, 0x00, 0x52, 0x07, 0x74, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x12, 0x62,
	0x0a, 0x08, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x44, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x57, 0x61,
	0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x56, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x40, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4c, 0x61,
	0x6e, 0x64, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x64, 0x12, 0x59, 0x0a, 0x05, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x74, 0x72, 0x61, 0x6a,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64, 0x48, 0x00, 0x52, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x03, 0x79, 0x61, 0x77, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x59, 0x61, 0x77, 0x48, 0x00, 0x52, 0x03, 0x79, 0x61, 0x77, 0x12, 0x53, 0x0a, 0x03, 0x72, 0x6f,
	0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x4f, 0x49, 0x48, 0x00, 0x52, 0x03, 0x72, 0x6f, 0x69, 0x12,
	0x59, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x61,
	0x79, 0x48, 0x00, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x22, 0x44, 0x0a, 0x08, 0x49, 0x74,
	0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x41,
	0x54, 0x54, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x49, 0x58, 0x45, 0x44, 0x10, 0x03,
	0x22, 0x70, 0x0a, 0x0b, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x1b, 0x0a, 0x17, 0x53, 0x41, 0x46, 0x54, 0x59, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x53, 0x41, 0x46, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x41, 0x46, 0x45, 0x10, 0x03, 0x12, 0x10,
	0x0a, 0x0c, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x4e, 0x47, 0x45, 0x52, 0x10, 0x04,
	0x22, 0x04, 0x08, 0x02, 0x10, 0x02, 0x2a, 0x0a, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x57, 0x41,
	0x52, 0x4e, 0x42, 0x0f, 0x0a, 0x0d, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x22, 0x4d, 0x0a, 0x08, 0x50, 0x6f, 0x72, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x6f,
	0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x6f, 0x74, 0x5f,
	0x69, 0x64, 0x22, 0xab, 0x03, 0x0a, 0x14, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x12, 0x20, 0x0a, 0x0c, 0x74,
	0x61, 0x67, 0x5f, 0x6f, 0x66, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x61, 0x67, 0x4f, 0x66, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x56, 0x0a,
	0x09, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x72,
	0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x6d, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x77, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x55, 0x0a, 0x10, 0x74, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x5f, 0x61, 0x6c, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x74, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x41, 0x6c, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74, 0x61, 0x6b,
	0x65, 0x6f, 0x66, 0x66, 0x5f, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x74, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4a,
	0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x22, 0x8f, 0x01, 0x0a, 0x10, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x52, 0x4f, 0x49, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x41, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74,
	0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x22, 0xb4, 0x09, 0x0a, 0x0d, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x12, 0x5a, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68,
	0x12, 0x56, 0x0a, 0x03, 0x79, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41, 0x6e, 0x67, 0x6c,
	0x65, 0x48, 0x00, 0x52, 0x03, 0x79, 0x61, 0x77, 0x12, 0x67, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x74, 0x72, 0x61, 0x6a,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x61, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x49, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x12, 0x5e, 0x0a, 0x04, 0x7a, 0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x48, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x5a, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x04,
	0x7a, 0x6f, 0x6f, 0x6d, 0x12, 0x67, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x61, 0x0a,
	0x08, 0x72, 0x61, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x44, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52, 0x61,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x07, 0x72, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x1a, 0x7d, 0x0a, 0x05, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x5c, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x1a,
	0x91, 0x01, 0x0a, 0x0b, 0x5a, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12,
	0x5c, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x6d, 0x61, 0x67, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x6d, 0x61, 0x67, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x46, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x54, 0x49,
	0x41, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x42, 0x53, 0x4f, 0x4c, 0x55, 0x54, 0x45,
	0x10, 0x01, 0x22, 0x2a, 0x0a, 0x0e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x48, 0x55, 0x54, 0x54, 0x45, 0x52, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x10, 0x01, 0x22, 0x23,
	0x0a, 0x0c, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x54, 0x4f,
	0x50, 0x10, 0x01, 0x22, 0x2d, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x56, 0x49, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x00,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x10, 0x01, 0x22, 0x24, 0x0a, 0x07, 0x52, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x56, 0x49, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e,
	0x46, 0x52, 0x41, 0x52, 0x45, 0x44, 0x10, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xae, 0x07, 0x0a, 0x15, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x57, 0x61, 0x79, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x61, 0x67, 0x5f, 0x6f, 0x66, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x67, 0x4f, 0x66,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x41, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74,
	0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x65, 0x74, 0x61, 0x12, 0x72, 0x0a, 0x11, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x46, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x61, 0x66, 0x65,
	0x74, 0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x0f, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x57, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x43, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x65, 0x0a,
	0x0f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73,
	0x18, 0x29, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67,
	0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73, 0x68, 0x6f,
	0x6f, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f,
	0x53, 0x68, 0x6f, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x68, 0x6f, 0x6f, 0x74, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x15, 0x73, 0x68, 0x6f, 0x6f, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x73, 0x68, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x11,
	0x73, 0x68, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x6e, 0x0a, 0x0d, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x21, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x4f, 0x41, 0x44, 0x5f, 0x52,
	0x4f, 0x49, 0x10, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22, 0xcc, 0x05, 0x0a, 0x11, 0x49,
	0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x64,
	0x12, 0x20, 0x0a, 0x0c, 0x74, 0x61, 0x67, 0x5f, 0x6f, 0x66, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x67, 0x4f, 0x66, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x56, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x6a, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x64, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x1a,
	0xd9, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x74, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x64, 0x2e, 0x4c, 0x61,
	0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x57, 0x0a, 0x11,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x5f, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x48, 0x00,
	0x52, 0x10, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x61,
	0x63, 0x68, 0x5f, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x69, 0x0a, 0x08, 0x4c,
	0x61, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4c, 0x41, 0x4e, 0x44, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x0a, 0x12,
	0x11, 0x0a, 0x0d, 0x54, 0x41, 0x4b, 0x45, 0x4f, 0x46, 0x46, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x54, 0x4c, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x52, 0x41, 0x43,
	0x4b, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x42, 0x10, 0x0a, 0x0e, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04,
	0x08, 0x04, 0x10, 0x05, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x12, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x57, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22,
	0x81, 0x01, 0x0a, 0x10, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x59, 0x61, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x57, 0x0a, 0x04, 0x61, 0x74,
	0x74, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x52, 0x04, 0x61,
	0x74, 0x74, 0x72, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x12, 0x57, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72,
	0x4a, 0x04, 0x08, 0x14, 0x10, 0x15, 0x4a, 0x04, 0x08, 0x15, 0x10, 0x16, 0x52, 0x01, 0x78, 0x52,
	0x01, 0x79, 0x22, 0xb7, 0x03, 0x0a, 0x03, 0x52, 0x4f, 0x49, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x3d, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x6a,
	0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x50, 0x0a, 0x04, 0x72, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x4f,
	0x49, 0x2e, 0x52, 0x6f, 0x61, 0x64, 0x52, 0x4f, 0x49, 0x48, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x61,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x1a, 0x97,
	0x01, 0x0a, 0x07, 0x52, 0x6f, 0x61, 0x64, 0x52, 0x4f, 0x49, 0x12, 0x3b, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6a,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x37, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x06, 0x52, 0x0d, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52, 0x08, 0x61, 0x6c,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0x30, 0x0a, 0x0e,
	0x4f, 0x72, 0x61, 0x67, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x2b,
	0x0a, 0x09, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x2b, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x27, 0x0a, 0x05, 0x55, 0x41, 0x56, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x22, 0x43, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x64,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x71, 0x75, 0x61, 0x64,
	0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x6c, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x6b, 0x0a, 0x11, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x68,
	0x61, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x68, 0x61, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x94, 0x09, 0x0a, 0x0a, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x3d, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x76, 0x0a, 0x10, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x69, 0x6c,
	0x6c, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x74, 0x72, 0x61, 0x6a,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x69,
	0x6c, 0x6c, 0x61, 0x72, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x61,
	0x6c, 0x50, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x12, 0x79, 0x0a, 0x11, 0x70, 0x6f, 0x6c, 0x79, 0x67,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6f,
	0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x48, 0x00,
	0x52, 0x10, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x79, 0x72, 0x61, 0x6d,
	0x69, 0x64, 0x12, 0x5a, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x40, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x54,
	0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x74,
	0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6c,
	0x69, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x63, 0x6f, 0x6e, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x15, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74,
	0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x69, 0x6c,
	0x6c, 0x61, 0x72, 0x48, 0x00, 0x52, 0x13, 0x72, 0x69, 0x67, 0x68, 0x74, 0x54, 0x72, 0x69, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x50, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x1a, 0x61, 0x0a, 0x0f, 0x50, 0x6f,
	0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x12, 0x4e, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74,
	0x65, 0x73, 0x69, 0x61, 0x6e, 0x32, 0x44, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x62, 0x0a,
	0x10, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x79, 0x72, 0x61, 0x6d, 0x69,
	0x64, 0x12, 0x4e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x72, 0x74, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x32, 0x44, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x1a, 0x5a, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x50, 0x0a, 0x05, 0x72,
	0x61, 0x64, 0x69, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x65,
	0x73, 0x69, 0x61, 0x6e, 0x32, 0x44, 0x52, 0x05, 0x72, 0x61, 0x64, 0x69, 0x69, 0x1a, 0x58, 0x0a,
	0x04, 0x43, 0x6f, 0x6e, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x72, 0x61, 0x64, 0x69, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x32, 0x44,
	0x52, 0x05, 0x72, 0x61, 0x64, 0x69, 0x69, 0x1a, 0x65, 0x0a, 0x13, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x54, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x12, 0x4e,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74,
	0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72,
	0x74, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x32, 0x44, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0a,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x29, 0x0a, 0x0b, 0x43, 0x61,
	0x72, 0x74, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x32, 0x44, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x01, 0x79, 0x22, 0x19, 0x0a, 0x03, 0x4b, 0x4d, 0x4c, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x22, 0xc9, 0x01, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x29, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x61, 0x76, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x61, 0x76, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xb3, 0x04, 0x0a,
	0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73,
	0x5f, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x74, 0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x4d,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x74,
	0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6c,
	0x69, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x41, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x74, 0x61, 0x67, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0xad, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x22, 0x9c, 0x04, 0x0a, 0x0c, 0x50, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b,
	0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x48, 0x0a, 0x0c, 0x75,
	0x61, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74,
	0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x75, 0x61, 0x76, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66,
	0x5f, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0f, 0x74, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x50, 0x0a, 0x10, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x56, 0x0a, 0x05, 0x70, 0x61, 0x74,
	0x68, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68,
	0x73, 0x22, 0xb6, 0x0c, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x5c, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x44, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x74, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x74, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x5b, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67,
	0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x48, 0x00, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x7b, 0x0a, 0x10, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4f, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x74, 0x68, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61,
	0x6e, 0x2e, 0x49, 0x6e, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x78, 0x0a, 0x0f, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x74, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x50, 0x61, 0x74, 0x68, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x49, 0x6e,
	0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x69,
	0x6e, 0x4e, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x72, 0x0a, 0x0d,
	0x6e, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x74, 0x68, 0x46, 0x6f,
	0x72, 0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x4e, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x7e, 0x0a, 0x10, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x0f, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f,
	0x1a, 0x52, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x4a, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67,
	0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x1a, 0xac, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x42, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x57, 0x0a, 0x0b, 0x64, 0x61, 0x6e, 0x67, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74,
	0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x41, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0xab, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x57, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x75, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x41,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72,
	0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x66, 0x0a, 0x0b, 0x4e, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x57, 0x0a, 0x0b, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64,
	0x61, 0x6e, 0x67, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x75, 0x0a, 0x10, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x61, 0x0a,
	0x10, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x0f, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x04, 0x53,
	0x70, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x74, 0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73, 0x70, 0x6f, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74,
	0x61, 0x67, 0x22, 0xf0, 0x03, 0x0a, 0x12, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x75,
	0x61, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x61, 0x76,
	0x49, 0x64, 0x12, 0x58, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x56, 0x0a,
	0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x74,
	0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x50, 0x61, 0x74, 0x68, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x2a, 0x2c, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x4e, 0x41, 0x52, 0x52, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x49, 0x44,
	0x45, 0x10, 0x01, 0x2a, 0x44, 0x0a, 0x0c, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x56, 0x41, 0x4c, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x4f, 0x46, 0x46, 0x10, 0x00, 0x12, 0x19,
	0x0a, 0x15, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f,
	0x4c, 0x41, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x2a, 0x4b, 0x0a, 0x15, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f,
	0x44, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a,
	0x13, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x57, 0x50, 0x10, 0x01, 0x2a, 0x61, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x4f, 0x55, 0x54, 0x45,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x56, 0x41, 0x4c, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x4f, 0x46, 0x46, 0x10, 0x01, 0x12, 0x1a, 0x0a,
	0x16, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x5f,
	0x4c, 0x41, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x6a, 0x70, 0x2f, 0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x67, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescOnce sync.Once
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescData = file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDesc
)

func file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescGZIP() []byte {
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescOnce.Do(func() {
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescData = protoimpl.X.CompressGZIP(file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescData)
	})
	return file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDescData
}

var file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes = make([]protoimpl.EnumInfo, 17)
var file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_goTypes = []any{
	(TransactionAttribute)(0),                  // 0: trajectory.trajectory_gcs_service.protocol.v1.TransactionAttribute
	(PortInterval)(0),                          // 1: trajectory.trajectory_gcs_service.protocol.v1.PortInterval
	(PlanReservationMethod)(0),                 // 2: trajectory.trajectory_gcs_service.protocol.v1.PlanReservationMethod
	(RouteInterval)(0),                         // 3: trajectory.trajectory_gcs_service.protocol.v1.RouteInterval
	(TransactionID_Attribute)(0),               // 4: trajectory.trajectory_gcs_service.protocol.v1.TransactionID.Attribute
	(ExternalMission_Format)(0),                // 5: trajectory.trajectory_gcs_service.protocol.v1.ExternalMission.Format
	(MissionControllerResult_Status)(0),        // 6: trajectory.trajectory_gcs_service.protocol.v1.MissionControllerResult.Status
	(Mission_EtaAttr)(0),                       // 7: trajectory.trajectory_gcs_service.protocol.v1.Mission.EtaAttr
	(MissionItem_ItemAttr)(0),                  // 8: trajectory.trajectory_gcs_service.protocol.v1.MissionItem.ItemAttr
	(MissionItem_SafetyRoute)(0),               // 9: trajectory.trajectory_gcs_service.protocol.v1.MissionItem.SafetyRoute
	(CameraControl_ControlMode)(0),             // 10: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.ControlMode
	(CameraControl_PictureControl)(0),          // 11: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.PictureControl
	(CameraControl_MovieControl)(0),            // 12: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.MovieControl
	(CameraControl_ImageMode)(0),               // 13: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.ImageMode
	(CameraControl_RayMode)(0),                 // 14: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.RayMode
	(ItemParameterWaypoint_Type)(0),            // 15: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterWaypoint.Type
	(ItemParameterLand_LandMode)(0),            // 16: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterLand.LandMode
	(*TransactionID)(nil),                      // 17: trajectory.trajectory_gcs_service.protocol.v1.TransactionID
	(*ScheduledTime)(nil),                      // 18: trajectory.trajectory_gcs_service.protocol.v1.ScheduledTime
	(*ExternalMission)(nil),                    // 19: trajectory.trajectory_gcs_service.protocol.v1.ExternalMission
	(*MissionControllerResult)(nil),            // 20: trajectory.trajectory_gcs_service.protocol.v1.MissionControllerResult
	(*ApplicationAttr)(nil),                    // 21: trajectory.trajectory_gcs_service.protocol.v1.ApplicationAttr
	(*Mission)(nil),                            // 22: trajectory.trajectory_gcs_service.protocol.v1.Mission
	(*MissionItem)(nil),                        // 23: trajectory.trajectory_gcs_service.protocol.v1.MissionItem
	(*PortZone)(nil),                           // 24: trajectory.trajectory_gcs_service.protocol.v1.PortZone
	(*ItemParameterTakeoff)(nil),               // 25: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterTakeoff
	(*ItemParameterROI)(nil),                   // 26: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterROI
	(*CameraControl)(nil),                      // 27: trajectory.trajectory_gcs_service.protocol.v1.CameraControl
	(*ItemParameterWaypoint)(nil),              // 28: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterWaypoint
	(*ItemParameterLand)(nil),                  // 29: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterLand
	(*ItemParameterSpeed)(nil),                 // 30: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterSpeed
	(*ItemParameterYaw)(nil),                   // 31: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterYaw
	(*ItemParameterDelay)(nil),                 // 32: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterDelay
	(*ROI)(nil),                                // 33: trajectory.trajectory_gcs_service.protocol.v1.ROI
	(*OragnizationID)(nil),                     // 34: trajectory.trajectory_gcs_service.protocol.v1.OragnizationID
	(*MissionID)(nil),                          // 35: trajectory.trajectory_gcs_service.protocol.v1.MissionID
	(*ProjectID)(nil),                          // 36: trajectory.trajectory_gcs_service.protocol.v1.ProjectID
	(*UAVID)(nil),                              // 37: trajectory.trajectory_gcs_service.protocol.v1.UAVID
	(*Key)(nil),                                // 38: trajectory.trajectory_gcs_service.protocol.v1.Key
	(*OptionalTimeStamp)(nil),                  // 39: trajectory.trajectory_gcs_service.protocol.v1.OptionalTimeStamp
	(*SolidModel)(nil),                         // 40: trajectory.trajectory_gcs_service.protocol.v1.SolidModel
	(*Cartesian2D)(nil),                        // 41: trajectory.trajectory_gcs_service.protocol.v1.Cartesian2D
	(*KML)(nil),                                // 42: trajectory.trajectory_gcs_service.protocol.v1.KML
	(*PortHeader)(nil),                         // 43: trajectory.trajectory_gcs_service.protocol.v1.PortHeader
	(*Port)(nil),                               // 44: trajectory.trajectory_gcs_service.protocol.v1.Port
	(*SearchSpace)(nil),                        // 45: trajectory.trajectory_gcs_service.protocol.v1.SearchSpace
	(*PortLocation)(nil),                       // 46: trajectory.trajectory_gcs_service.protocol.v1.PortLocation
	(*ResultPathForPlan)(nil),                  // 47: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan
	(*Spot)(nil),                               // 48: trajectory.trajectory_gcs_service.protocol.v1.Spot
	(*RouteObjectForPlan)(nil),                 // 49: trajectory.trajectory_gcs_service.protocol.v1.RouteObjectForPlan
	(*ItemParameterTakeoff_Condition)(nil),     // 50: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterTakeoff.Condition
	(*CameraControl_Angle)(nil),                // 51: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.Angle
	(*CameraControl_ZoomControl)(nil),          // 52: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.ZoomControl
	(*ItemParameterLand_Condition)(nil),        // 53: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterLand.Condition
	(*ROI_RoadROI)(nil),                        // 54: trajectory.trajectory_gcs_service.protocol.v1.ROI.RoadROI
	(*SolidModel_PolygonalPillar)(nil),         // 55: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.PolygonalPillar
	(*SolidModel_PolygonalPyramid)(nil),        // 56: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.PolygonalPyramid
	(*SolidModel_Column)(nil),                  // 57: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.Column
	(*SolidModel_Cone)(nil),                    // 58: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.Cone
	(*SolidModel_RightTrianglePillar)(nil),     // 59: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.RightTrianglePillar
	(*ResultPathForPlan_Path)(nil),             // 60: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.Path
	(*ResultPathForPlan_InBarrierError)(nil),   // 61: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.InBarrierError
	(*ResultPathForPlan_InNoDataError)(nil),    // 62: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.InNoDataError
	(*ResultPathForPlan_NoPathError)(nil),      // 63: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.NoPathError
	(*ResultPathForPlan_UnreachableError)(nil), // 64: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.UnreachableError
	(*timestamppb.Timestamp)(nil),              // 65: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),                // 66: google.protobuf.Duration
	(*_type.Altitude)(nil),                     // 67: trajectory.trjx_api_service.Altitude
	(*_type.Position)(nil),                     // 68: trajectory.trjx_api_service.Position
	(*_type.Coordinate)(nil),                   // 69: trajectory.trjx_api_service.Coordinate
	(*spatial.SpatialIdentification)(nil),      // 70: generic.v2.SpatialIdentification
}
var file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_depIdxs = []int32{
	4,  // 0: trajectory.trajectory_gcs_service.protocol.v1.TransactionID.attribute:type_name -> trajectory.trajectory_gcs_service.protocol.v1.TransactionID.Attribute
	65, // 1: trajectory.trajectory_gcs_service.protocol.v1.ScheduledTime.time:type_name -> google.protobuf.Timestamp
	66, // 2: trajectory.trajectory_gcs_service.protocol.v1.ScheduledTime.period:type_name -> google.protobuf.Duration
	66, // 3: trajectory.trajectory_gcs_service.protocol.v1.ScheduledTime.occupy:type_name -> google.protobuf.Duration
	5,  // 4: trajectory.trajectory_gcs_service.protocol.v1.ExternalMission.attr:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ExternalMission.Format
	22, // 5: trajectory.trajectory_gcs_service.protocol.v1.ExternalMission.trjx:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Mission
	6,  // 6: trajectory.trajectory_gcs_service.protocol.v1.MissionControllerResult.status:type_name -> trajectory.trajectory_gcs_service.protocol.v1.MissionControllerResult.Status
	7,  // 7: trajectory.trajectory_gcs_service.protocol.v1.Mission.eta_attr:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Mission.EtaAttr
	23, // 8: trajectory.trajectory_gcs_service.protocol.v1.Mission.items_array:type_name -> trajectory.trajectory_gcs_service.protocol.v1.MissionItem
	33, // 9: trajectory.trajectory_gcs_service.protocol.v1.Mission.roi_groups:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ROI
	21, // 10: trajectory.trajectory_gcs_service.protocol.v1.Mission.app:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ApplicationAttr
	25, // 11: trajectory.trajectory_gcs_service.protocol.v1.MissionItem.takeoff:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ItemParameterTakeoff
	28, // 12: trajectory.trajectory_gcs_service.protocol.v1.MissionItem.waypoint:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ItemParameterWaypoint
	29, // 13: trajectory.trajectory_gcs_service.protocol.v1.MissionItem.land:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ItemParameterLand
	30, // 14: trajectory.trajectory_gcs_service.protocol.v1.MissionItem.speed:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ItemParameterSpeed
	31, // 15: trajectory.trajectory_gcs_service.protocol.v1.MissionItem.yaw:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ItemParameterYaw
	26, // 16: trajectory.trajectory_gcs_service.protocol.v1.MissionItem.roi:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ItemParameterROI
	32, // 17: trajectory.trajectory_gcs_service.protocol.v1.MissionItem.delay:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ItemParameterDelay
	24, // 18: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterTakeoff.port_zone:type_name -> trajectory.trajectory_gcs_service.protocol.v1.PortZone
	50, // 19: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterTakeoff.condition:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ItemParameterTakeoff.Condition
	67, // 20: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterROI.altitude:type_name -> trajectory.trjx_api_service.Altitude
	51, // 21: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.pitch:type_name -> trajectory.trajectory_gcs_service.protocol.v1.CameraControl.Angle
	51, // 22: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.yaw:type_name -> trajectory.trajectory_gcs_service.protocol.v1.CameraControl.Angle
	11, // 23: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.picture:type_name -> trajectory.trajectory_gcs_service.protocol.v1.CameraControl.PictureControl
	12, // 24: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.movie:type_name -> trajectory.trajectory_gcs_service.protocol.v1.CameraControl.MovieControl
	52, // 25: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.zoom:type_name -> trajectory.trajectory_gcs_service.protocol.v1.CameraControl.ZoomControl
	13, // 26: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.image_mode:type_name -> trajectory.trajectory_gcs_service.protocol.v1.CameraControl.ImageMode
	14, // 27: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.ray_mode:type_name -> trajectory.trajectory_gcs_service.protocol.v1.CameraControl.RayMode
	67, // 28: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterWaypoint.altitude:type_name -> trajectory.trjx_api_service.Altitude
	9,  // 29: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterWaypoint.safety_route_attr:type_name -> trajectory.trajectory_gcs_service.protocol.v1.MissionItem.SafetyRoute
	8,  // 30: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterWaypoint.attr:type_name -> trajectory.trajectory_gcs_service.protocol.v1.MissionItem.ItemAttr
	27, // 31: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterWaypoint.camera_controls:type_name -> trajectory.trajectory_gcs_service.protocol.v1.CameraControl
	15, // 32: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterWaypoint.waypoint_type:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ItemParameterWaypoint.Type
	24, // 33: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterLand.port_zone:type_name -> trajectory.trajectory_gcs_service.protocol.v1.PortZone
	53, // 34: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterLand.condition:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ItemParameterLand.Condition
	8,  // 35: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterLand.attr:type_name -> trajectory.trajectory_gcs_service.protocol.v1.MissionItem.ItemAttr
	8,  // 36: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterSpeed.attr:type_name -> trajectory.trajectory_gcs_service.protocol.v1.MissionItem.ItemAttr
	8,  // 37: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterYaw.attr:type_name -> trajectory.trajectory_gcs_service.protocol.v1.MissionItem.ItemAttr
	8,  // 38: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterDelay.attr:type_name -> trajectory.trajectory_gcs_service.protocol.v1.MissionItem.ItemAttr
	68, // 39: trajectory.trajectory_gcs_service.protocol.v1.ROI.point:type_name -> trajectory.trjx_api_service.Position
	54, // 40: trajectory.trajectory_gcs_service.protocol.v1.ROI.road:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ROI.RoadROI
	65, // 41: trajectory.trajectory_gcs_service.protocol.v1.OptionalTimeStamp.time_stamp:type_name -> google.protobuf.Timestamp
	68, // 42: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.origin:type_name -> trajectory.trjx_api_service.Position
	55, // 43: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.polygonal_pillar:type_name -> trajectory.trajectory_gcs_service.protocol.v1.SolidModel.PolygonalPillar
	56, // 44: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.polygonal_pyramid:type_name -> trajectory.trajectory_gcs_service.protocol.v1.SolidModel.PolygonalPyramid
	57, // 45: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.column:type_name -> trajectory.trajectory_gcs_service.protocol.v1.SolidModel.Column
	58, // 46: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.cone:type_name -> trajectory.trajectory_gcs_service.protocol.v1.SolidModel.Cone
	59, // 47: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.right_triangle_pillar:type_name -> trajectory.trajectory_gcs_service.protocol.v1.SolidModel.RightTrianglePillar
	40, // 48: trajectory.trajectory_gcs_service.protocol.v1.Port.port:type_name -> trajectory.trajectory_gcs_service.protocol.v1.SolidModel
	65, // 49: trajectory.trajectory_gcs_service.protocol.v1.Port.start_time:type_name -> google.protobuf.Timestamp
	65, // 50: trajectory.trajectory_gcs_service.protocol.v1.Port.end_time:type_name -> google.protobuf.Timestamp
	67, // 51: trajectory.trajectory_gcs_service.protocol.v1.Port.altitude:type_name -> trajectory.trjx_api_service.Altitude
	69, // 52: trajectory.trajectory_gcs_service.protocol.v1.SearchSpace.max_coordinate:type_name -> trajectory.trjx_api_service.Coordinate
	69, // 53: trajectory.trajectory_gcs_service.protocol.v1.SearchSpace.min_coordinate:type_name -> trajectory.trjx_api_service.Coordinate
	1,  // 54: trajectory.trajectory_gcs_service.protocol.v1.PortLocation.interval:type_name -> trajectory.trajectory_gcs_service.protocol.v1.PortInterval
	68, // 55: trajectory.trajectory_gcs_service.protocol.v1.PortLocation.uav_position:type_name -> trajectory.trjx_api_service.Position
	68, // 56: trajectory.trajectory_gcs_service.protocol.v1.PortLocation.closest_position:type_name -> trajectory.trjx_api_service.Position
	47, // 57: trajectory.trajectory_gcs_service.protocol.v1.PortLocation.paths:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan
	2,  // 58: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.method:type_name -> trajectory.trajectory_gcs_service.protocol.v1.PlanReservationMethod
	70, // 59: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.tiles:type_name -> generic.v2.SpatialIdentification
	60, // 60: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.path:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.Path
	61, // 61: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.in_barrier_error:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.InBarrierError
	62, // 62: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.in_nodata_error:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.InNoDataError
	63, // 63: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.no_path_error:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.NoPathError
	64, // 64: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.unreachable_erro:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.UnreachableError
	68, // 65: trajectory.trajectory_gcs_service.protocol.v1.Spot.center:type_name -> trajectory.trjx_api_service.Position
	3,  // 66: trajectory.trajectory_gcs_service.protocol.v1.RouteObjectForPlan.interval:type_name -> trajectory.trajectory_gcs_service.protocol.v1.RouteInterval
	65, // 67: trajectory.trajectory_gcs_service.protocol.v1.RouteObjectForPlan.start_time:type_name -> google.protobuf.Timestamp
	65, // 68: trajectory.trajectory_gcs_service.protocol.v1.RouteObjectForPlan.end_time:type_name -> google.protobuf.Timestamp
	47, // 69: trajectory.trajectory_gcs_service.protocol.v1.RouteObjectForPlan.paths:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan
	67, // 70: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterTakeoff.Condition.takeoff_altitude:type_name -> trajectory.trjx_api_service.Altitude
	10, // 71: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.Angle.mode:type_name -> trajectory.trajectory_gcs_service.protocol.v1.CameraControl.ControlMode
	10, // 72: trajectory.trajectory_gcs_service.protocol.v1.CameraControl.ZoomControl.mode:type_name -> trajectory.trajectory_gcs_service.protocol.v1.CameraControl.ControlMode
	16, // 73: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterLand.Condition.mode:type_name -> trajectory.trajectory_gcs_service.protocol.v1.ItemParameterLand.LandMode
	67, // 74: trajectory.trajectory_gcs_service.protocol.v1.ItemParameterLand.Condition.approach_altitude:type_name -> trajectory.trjx_api_service.Altitude
	68, // 75: trajectory.trajectory_gcs_service.protocol.v1.ROI.RoadROI.start:type_name -> trajectory.trjx_api_service.Position
	68, // 76: trajectory.trajectory_gcs_service.protocol.v1.ROI.RoadROI.end:type_name -> trajectory.trjx_api_service.Position
	41, // 77: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.PolygonalPillar.base:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Cartesian2D
	41, // 78: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.PolygonalPyramid.base:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Cartesian2D
	41, // 79: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.Column.radii:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Cartesian2D
	41, // 80: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.Cone.radii:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Cartesian2D
	41, // 81: trajectory.trajectory_gcs_service.protocol.v1.SolidModel.RightTrianglePillar.size:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Cartesian2D
	22, // 82: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.Path.path:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Mission
	22, // 83: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.InBarrierError.danger_path:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Mission
	68, // 84: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.InBarrierError.position:type_name -> trajectory.trjx_api_service.Position
	22, // 85: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.InNoDataError.unsafe_path:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Mission
	68, // 86: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.InNoDataError.position:type_name -> trajectory.trjx_api_service.Position
	22, // 87: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.NoPathError.danger_path:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Mission
	22, // 88: trajectory.trajectory_gcs_service.protocol.v1.ResultPathForPlan.UnreachableError.unreachable_path:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Mission
	89, // [89:89] is the sub-list for method output_type
	89, // [89:89] is the sub-list for method input_type
	89, // [89:89] is the sub-list for extension type_name
	89, // [89:89] is the sub-list for extension extendee
	0,  // [0:89] is the sub-list for field type_name
}

func init() { file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_init() }
func file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_init() {
	if File_trajectory_trajectory_gcs_service_protocol_v1_resource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TransactionID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ScheduledTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ExternalMission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MissionControllerResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Mission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*MissionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PortZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ItemParameterTakeoff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ItemParameterROI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CameraControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ItemParameterWaypoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ItemParameterLand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ItemParameterSpeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ItemParameterYaw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ItemParameterDelay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ROI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*OragnizationID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*MissionID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ProjectID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*UAVID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*OptionalTimeStamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*SolidModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*Cartesian2D); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*KML); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*PortHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*Port); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*SearchSpace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*PortLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*ResultPathForPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*Spot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*RouteObjectForPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*ItemParameterTakeoff_Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*CameraControl_Angle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*CameraControl_ZoomControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*ItemParameterLand_Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*ROI_RoadROI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*SolidModel_PolygonalPillar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*SolidModel_PolygonalPyramid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*SolidModel_Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*SolidModel_Cone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*SolidModel_RightTrianglePillar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*ResultPathForPlan_Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*ResultPathForPlan_InBarrierError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*ResultPathForPlan_InNoDataError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*ResultPathForPlan_NoPathError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*ResultPathForPlan_UnreachableError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[1].OneofWrappers = []any{}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[2].OneofWrappers = []any{
		(*ExternalMission_Trjx)(nil),
		(*ExternalMission_Csv)(nil),
		(*ExternalMission_JsonMission)(nil),
	}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[6].OneofWrappers = []any{
		(*MissionItem_Takeoff)(nil),
		(*MissionItem_Waypoint)(nil),
		(*MissionItem_Land)(nil),
		(*MissionItem_Speed)(nil),
		(*MissionItem_Yaw)(nil),
		(*MissionItem_Roi)(nil),
		(*MissionItem_Delay)(nil),
	}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[7].OneofWrappers = []any{}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[8].OneofWrappers = []any{
		(*ItemParameterTakeoff_PortZone)(nil),
		(*ItemParameterTakeoff_Condition_)(nil),
	}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[10].OneofWrappers = []any{
		(*CameraControl_Pitch)(nil),
		(*CameraControl_Yaw)(nil),
		(*CameraControl_Picture)(nil),
		(*CameraControl_Movie)(nil),
		(*CameraControl_Zoom)(nil),
		(*CameraControl_ImageMode_)(nil),
		(*CameraControl_RayMode_)(nil),
	}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[11].OneofWrappers = []any{
		(*ItemParameterWaypoint_AutoShoot)(nil),
		(*ItemParameterWaypoint_ShootIntervalDistance)(nil),
		(*ItemParameterWaypoint_ShootIntervalTime)(nil),
	}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[12].OneofWrappers = []any{
		(*ItemParameterLand_PortZone)(nil),
		(*ItemParameterLand_Condition_)(nil),
	}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[16].OneofWrappers = []any{
		(*ROI_Point)(nil),
		(*ROI_Road)(nil),
	}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[23].OneofWrappers = []any{
		(*SolidModel_PolygonalPillar_)(nil),
		(*SolidModel_PolygonalPyramid_)(nil),
		(*SolidModel_Column_)(nil),
		(*SolidModel_Cone_)(nil),
		(*SolidModel_RightTrianglePillar_)(nil),
	}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[26].OneofWrappers = []any{}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[27].OneofWrappers = []any{}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[30].OneofWrappers = []any{
		(*ResultPathForPlan_Path_)(nil),
		(*ResultPathForPlan_InBarrierError_)(nil),
		(*ResultPathForPlan_InNodataError)(nil),
		(*ResultPathForPlan_NoPathError_)(nil),
		(*ResultPathForPlan_UnreachableErro)(nil),
	}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[31].OneofWrappers = []any{}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[33].OneofWrappers = []any{}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes[36].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDesc,
			NumEnums:      17,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_goTypes,
		DependencyIndexes: file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_depIdxs,
		EnumInfos:         file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_enumTypes,
		MessageInfos:      file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_msgTypes,
	}.Build()
	File_trajectory_trajectory_gcs_service_protocol_v1_resource_proto = out.File
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_rawDesc = nil
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_goTypes = nil
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_depIdxs = nil
}
