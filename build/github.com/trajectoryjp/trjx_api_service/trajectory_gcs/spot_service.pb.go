// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: trajectory/trajectory_gcs_service/protocol/v1/spot_service.proto

package trajectory_gcs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// スポット登録リクエスト
type CreateSpotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 登録スポット
	Spot *Spot `protobuf:"bytes,1,opt,name=spot,proto3" json:"spot,omitempty"`
}

func (x *CreateSpotRequest) Reset() {
	*x = CreateSpotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpotRequest) ProtoMessage() {}

func (x *CreateSpotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpotRequest.ProtoReflect.Descriptor instead.
func (*CreateSpotRequest) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSpotRequest) GetSpot() *Spot {
	if x != nil {
		return x.Spot
	}
	return nil
}

// スポット取得リクエスト
type GetSpotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`        // ポートID
	Fields *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"` // クエリフィールド(指定されたカラムのみ取得)
}

func (x *GetSpotRequest) Reset() {
	*x = GetSpotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpotRequest) ProtoMessage() {}

func (x *GetSpotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpotRequest.ProtoReflect.Descriptor instead.
func (*GetSpotRequest) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetSpotRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSpotRequest) GetFields() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Fields
	}
	return nil
}

// スポット一覧取得・フィルタリング検索リクエスト
type ListSpotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId int64                  `protobuf:"varint,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`       // ポートID
	Name   *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`                    // 名称
	Tag    *string                `protobuf:"bytes,3,opt,name=tag,proto3,oneof" json:"tag,omitempty"`                      // タグ
	IsUsed *bool                  `protobuf:"varint,4,opt,name=is_used,json=isUsed,proto3,oneof" json:"is_used,omitempty"` // スポット使用状況
	Fields *fieldmaskpb.FieldMask `protobuf:"bytes,5,opt,name=fields,proto3" json:"fields,omitempty"`                      // クエリフィールド(指定されたカラムのみ取得)
}

func (x *ListSpotsRequest) Reset() {
	*x = ListSpotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpotsRequest) ProtoMessage() {}

func (x *ListSpotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpotsRequest.ProtoReflect.Descriptor instead.
func (*ListSpotsRequest) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListSpotsRequest) GetPortId() int64 {
	if x != nil {
		return x.PortId
	}
	return 0
}

func (x *ListSpotsRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ListSpotsRequest) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *ListSpotsRequest) GetIsUsed() bool {
	if x != nil && x.IsUsed != nil {
		return *x.IsUsed
	}
	return false
}

func (x *ListSpotsRequest) GetFields() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Fields
	}
	return nil
}

// スポット一覧取得・フィルタリング検索レスポンス
type ListSpotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// スポット
	Spots []*Spot `protobuf:"bytes,1,rep,name=spots,proto3" json:"spots,omitempty"`
}

func (x *ListSpotsResponse) Reset() {
	*x = ListSpotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpotsResponse) ProtoMessage() {}

func (x *ListSpotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpotsResponse.ProtoReflect.Descriptor instead.
func (*ListSpotsResponse) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListSpotsResponse) GetSpots() []*Spot {
	if x != nil {
		return x.Spots
	}
	return nil
}

// スポット更新リクエスト
type UpdateSpotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 更新マスク(指定されたフィールドのみ更新)]
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// スポット(更新マスクで指定したもののみ更新)
	Spot *Spot `protobuf:"bytes,2,opt,name=spot,proto3" json:"spot,omitempty"`
}

func (x *UpdateSpotRequest) Reset() {
	*x = UpdateSpotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSpotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpotRequest) ProtoMessage() {}

func (x *UpdateSpotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpotRequest.ProtoReflect.Descriptor instead.
func (*UpdateSpotRequest) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSpotRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateSpotRequest) GetSpot() *Spot {
	if x != nil {
		return x.Spot
	}
	return nil
}

// スポット削除リクエスト
type DeleteSpotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // スポットID
}

func (x *DeleteSpotRequest) Reset() {
	*x = DeleteSpotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpotRequest) ProtoMessage() {}

func (x *DeleteSpotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpotRequest.ProtoReflect.Descriptor instead.
func (*DeleteSpotRequest) Descriptor() ([]byte, []int) {
	return file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteSpotRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto protoreflect.FileDescriptor

var file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDesc = []byte{
	0x0a, 0x40, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x70, 0x6f, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x2d, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74,
	0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x3c, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5c,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x04, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74,
	0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x70, 0x6f, 0x74, 0x22, 0x54, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x74, 0x61, 0x67, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x02, 0x52, 0x06, 0x69, 0x73, 0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x32,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x74, 0x61, 0x67, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x22,
	0x5e, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x22,
	0x99, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x73, 0x6b, 0x12, 0x47, 0x0a, 0x04, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x70, 0x6f, 0x74, 0x22, 0x23, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x32, 0x93, 0x05, 0x0a, 0x0b, 0x53, 0x70, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x83, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x12,
	0x40, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74,
	0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x7d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f,
	0x74, 0x12, 0x3d, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74,
	0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x33, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x90, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70,
	0x6f, 0x74, 0x73, 0x12, 0x3f, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x66, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x40, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67,
	0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x83, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x12,
	0x40, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74,
	0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x6a,
	0x70, 0x2f, 0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDescOnce sync.Once
	file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDescData = file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDesc
)

func file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDescGZIP() []byte {
	file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDescOnce.Do(func() {
		file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDescData)
	})
	return file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDescData
}

var file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_goTypes = []any{
	(*CreateSpotRequest)(nil),     // 0: trajectory.trajectory_gcs_service.protocol.v1.CreateSpotRequest
	(*GetSpotRequest)(nil),        // 1: trajectory.trajectory_gcs_service.protocol.v1.GetSpotRequest
	(*ListSpotsRequest)(nil),      // 2: trajectory.trajectory_gcs_service.protocol.v1.ListSpotsRequest
	(*ListSpotsResponse)(nil),     // 3: trajectory.trajectory_gcs_service.protocol.v1.ListSpotsResponse
	(*UpdateSpotRequest)(nil),     // 4: trajectory.trajectory_gcs_service.protocol.v1.UpdateSpotRequest
	(*DeleteSpotRequest)(nil),     // 5: trajectory.trajectory_gcs_service.protocol.v1.DeleteSpotRequest
	(*Spot)(nil),                  // 6: trajectory.trajectory_gcs_service.protocol.v1.Spot
	(*fieldmaskpb.FieldMask)(nil), // 7: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),         // 8: google.protobuf.Empty
}
var file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_depIdxs = []int32{
	6,  // 0: trajectory.trajectory_gcs_service.protocol.v1.CreateSpotRequest.spot:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Spot
	7,  // 1: trajectory.trajectory_gcs_service.protocol.v1.GetSpotRequest.fields:type_name -> google.protobuf.FieldMask
	7,  // 2: trajectory.trajectory_gcs_service.protocol.v1.ListSpotsRequest.fields:type_name -> google.protobuf.FieldMask
	6,  // 3: trajectory.trajectory_gcs_service.protocol.v1.ListSpotsResponse.spots:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Spot
	7,  // 4: trajectory.trajectory_gcs_service.protocol.v1.UpdateSpotRequest.update_mask:type_name -> google.protobuf.FieldMask
	6,  // 5: trajectory.trajectory_gcs_service.protocol.v1.UpdateSpotRequest.spot:type_name -> trajectory.trajectory_gcs_service.protocol.v1.Spot
	0,  // 6: trajectory.trajectory_gcs_service.protocol.v1.SpotService.CreateSpot:input_type -> trajectory.trajectory_gcs_service.protocol.v1.CreateSpotRequest
	1,  // 7: trajectory.trajectory_gcs_service.protocol.v1.SpotService.GetSpot:input_type -> trajectory.trajectory_gcs_service.protocol.v1.GetSpotRequest
	2,  // 8: trajectory.trajectory_gcs_service.protocol.v1.SpotService.ListSpots:input_type -> trajectory.trajectory_gcs_service.protocol.v1.ListSpotsRequest
	5,  // 9: trajectory.trajectory_gcs_service.protocol.v1.SpotService.DeleteSpot:input_type -> trajectory.trajectory_gcs_service.protocol.v1.DeleteSpotRequest
	4,  // 10: trajectory.trajectory_gcs_service.protocol.v1.SpotService.UpdateSpot:input_type -> trajectory.trajectory_gcs_service.protocol.v1.UpdateSpotRequest
	6,  // 11: trajectory.trajectory_gcs_service.protocol.v1.SpotService.CreateSpot:output_type -> trajectory.trajectory_gcs_service.protocol.v1.Spot
	6,  // 12: trajectory.trajectory_gcs_service.protocol.v1.SpotService.GetSpot:output_type -> trajectory.trajectory_gcs_service.protocol.v1.Spot
	3,  // 13: trajectory.trajectory_gcs_service.protocol.v1.SpotService.ListSpots:output_type -> trajectory.trajectory_gcs_service.protocol.v1.ListSpotsResponse
	8,  // 14: trajectory.trajectory_gcs_service.protocol.v1.SpotService.DeleteSpot:output_type -> google.protobuf.Empty
	6,  // 15: trajectory.trajectory_gcs_service.protocol.v1.SpotService.UpdateSpot:output_type -> trajectory.trajectory_gcs_service.protocol.v1.Spot
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_init() }
func file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_init() {
	if File_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto != nil {
		return
	}
	file_trajectory_trajectory_gcs_service_protocol_v1_resource_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSpotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetSpotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListSpotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListSpotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSpotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSpotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_goTypes,
		DependencyIndexes: file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_depIdxs,
		MessageInfos:      file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_msgTypes,
	}.Build()
	File_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto = out.File
	file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_rawDesc = nil
	file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_goTypes = nil
	file_trajectory_trajectory_gcs_service_protocol_v1_spot_service_proto_depIdxs = nil
}
