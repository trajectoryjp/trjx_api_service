// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.29.1
// source: github.com/trajectoryjp/trjx_api_service/trajectory_gcs_service/protocol/v1/waypoint_service.proto

package trajectory_gcs

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckWaypointRequest struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Waypoints     []*CheckWaypointRequest_Waypoint `protobuf:"bytes,1,rep,name=waypoints,proto3" json:"waypoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckWaypointRequest) Reset() {
	*x = CheckWaypointRequest{}
	mi := &file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckWaypointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckWaypointRequest) ProtoMessage() {}

func (x *CheckWaypointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckWaypointRequest.ProtoReflect.Descriptor instead.
func (*CheckWaypointRequest) Descriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDescGZIP(), []int{0}
}

func (x *CheckWaypointRequest) GetWaypoints() []*CheckWaypointRequest_Waypoint {
	if x != nil {
		return x.Waypoints
	}
	return nil
}

type CheckWaypointResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Waypoints     []*CheckWaypointResponse_Waypoint `protobuf:"bytes,1,rep,name=waypoints,proto3" json:"waypoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckWaypointResponse) Reset() {
	*x = CheckWaypointResponse{}
	mi := &file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckWaypointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckWaypointResponse) ProtoMessage() {}

func (x *CheckWaypointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckWaypointResponse.ProtoReflect.Descriptor instead.
func (*CheckWaypointResponse) Descriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDescGZIP(), []int{1}
}

func (x *CheckWaypointResponse) GetWaypoints() []*CheckWaypointResponse_Waypoint {
	if x != nil {
		return x.Waypoints
	}
	return nil
}

type CheckWaypointRequest_Waypoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 緯度
	Latitude float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// 経度
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// 高度
	Altitude float32 `protobuf:"fixed32,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
	// 名称
	Name *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// 高度属性、RelativeとAGLは非対応
	// Ellipsoid = 0 (楕円球体高)
	// Relative = 1 (離陸地点を基準とする相対高度)
	// AGL = 2 (地表面高度)
	// MSL = 3 (海抜高度。デフォルト値)
	AltitudeAttr uint32 `protobuf:"varint,5,opt,name=altitude_attr,json=altitudeAttr,proto3" json:"altitude_attr,omitempty"`
	// プロジェクトID
	ProjectId     *int32 `protobuf:"varint,6,opt,name=project_id,json=projectId,proto3,oneof" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckWaypointRequest_Waypoint) Reset() {
	*x = CheckWaypointRequest_Waypoint{}
	mi := &file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckWaypointRequest_Waypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckWaypointRequest_Waypoint) ProtoMessage() {}

func (x *CheckWaypointRequest_Waypoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckWaypointRequest_Waypoint.ProtoReflect.Descriptor instead.
func (*CheckWaypointRequest_Waypoint) Descriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CheckWaypointRequest_Waypoint) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CheckWaypointRequest_Waypoint) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CheckWaypointRequest_Waypoint) GetAltitude() float32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *CheckWaypointRequest_Waypoint) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CheckWaypointRequest_Waypoint) GetAltitudeAttr() uint32 {
	if x != nil {
		return x.AltitudeAttr
	}
	return 0
}

func (x *CheckWaypointRequest_Waypoint) GetProjectId() int32 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

type CheckWaypointResponse_Waypoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// リザルトメッセージ
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 緯度
	Latitude float64 `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// 経度
	Longitude float64 `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// 高度
	Altitude float32 `protobuf:"fixed32,5,opt,name=altitude,proto3" json:"altitude,omitempty"`
	// リザルトコード
	ResultCode    *CheckWaypointResponse_Waypoint_ResultDef `protobuf:"bytes,6,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckWaypointResponse_Waypoint) Reset() {
	*x = CheckWaypointResponse_Waypoint{}
	mi := &file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckWaypointResponse_Waypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckWaypointResponse_Waypoint) ProtoMessage() {}

func (x *CheckWaypointResponse_Waypoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckWaypointResponse_Waypoint.ProtoReflect.Descriptor instead.
func (*CheckWaypointResponse_Waypoint) Descriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CheckWaypointResponse_Waypoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CheckWaypointResponse_Waypoint) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckWaypointResponse_Waypoint) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CheckWaypointResponse_Waypoint) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CheckWaypointResponse_Waypoint) GetAltitude() float32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *CheckWaypointResponse_Waypoint) GetResultCode() *CheckWaypointResponse_Waypoint_ResultDef {
	if x != nil {
		return x.ResultCode
	}
	return nil
}

type CheckWaypointResponse_Waypoint_ResultDef struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 0 ウェイポイントチェックOK。safeで飛行可。
	// 2003　バリア領域。飛行不可
	// 2004 スペースなし。飛行不可
	// 2005 予約空域。飛行不可（未実装）
	// 2006 エリア未設定。unsafeだが飛行可。
	// 2007 エラー。WP設定不可で飛行不可
	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	// リザルト情報
	Info          string `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckWaypointResponse_Waypoint_ResultDef) Reset() {
	*x = CheckWaypointResponse_Waypoint_ResultDef{}
	mi := &file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckWaypointResponse_Waypoint_ResultDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckWaypointResponse_Waypoint_ResultDef) ProtoMessage() {}

func (x *CheckWaypointResponse_Waypoint_ResultDef) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckWaypointResponse_Waypoint_ResultDef.ProtoReflect.Descriptor instead.
func (*CheckWaypointResponse_Waypoint_ResultDef) Descriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *CheckWaypointResponse_Waypoint_ResultDef) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *CheckWaypointResponse_Waypoint_ResultDef) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto protoreflect.FileDescriptor

var file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDesc = []byte{
	0x0a, 0x62, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x6a, 0x70, 0x2f, 0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x74, 0x72, 0x61, 0x6a, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x61,
	0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2d, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xdf, 0x02, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x61, 0x79,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x09,
	0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x4c, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x77,
	0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0xda, 0x01, 0x0a, 0x08, 0x57, 0x61, 0x79,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x6c, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x22, 0xc8, 0x03, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57,
	0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6b, 0x0a, 0x09, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x09, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0xc1, 0x02, 0x0a,
	0x08, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x78, 0x0a,
	0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x57, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x66, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x44, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x32, 0x88, 0x05, 0x0a, 0x0f, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0xf4, 0x04, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x61,
	0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x43, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x67,
	0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x61, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x74, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xd7, 0x03, 0x92, 0x41, 0xd3, 0x03, 0x12, 0x33, 0xe3, 0x82, 0xa6, 0xe3, 0x82, 0xa7,
	0xe3, 0x82, 0xa4, 0xe3, 0x83, 0x9d, 0xe3, 0x82, 0xa4, 0xe3, 0x83, 0xb3, 0xe3, 0x83, 0x88, 0xe3,
	0x81, 0x8c, 0xe8, 0xa8, 0xad, 0xe5, 0xae, 0x9a, 0xe3, 0x81, 0xa7, 0xe3, 0x81, 0x8d, 0xe3, 0x82,
	0x8b, 0xe3, 0x81, 0x8b, 0xe3, 0x81, 0xae, 0xe7, 0xa2, 0xba, 0xe8, 0xaa, 0x8d, 0x1a, 0x39, 0xe3,
	0x82, 0xa6, 0xe3, 0x82, 0xa7, 0xe3, 0x82, 0xa4, 0xe3, 0x83, 0x9d, 0xe3, 0x82, 0xa4, 0xe3, 0x83,
	0xb3, 0xe3, 0x83, 0x88, 0xe3, 0x81, 0x8c, 0xe8, 0xa8, 0xad, 0xe5, 0xae, 0x9a, 0xe3, 0x81, 0xa7,
	0xe3, 0x81, 0x8d, 0xe3, 0x82, 0x8b, 0xe3, 0x81, 0x8b, 0xe7, 0xa2, 0xba, 0xe8, 0xaa, 0x8d, 0xe3,
	0x81, 0x99, 0xe3, 0x82, 0x8b, 0xe3, 0x80, 0x82, 0x4a, 0x9f, 0x02, 0x0a, 0x03, 0x35, 0x30, 0x30,
	0x12, 0x97, 0x02, 0x0a, 0x1d, 0x4e, 0x6f, 0x74, 0x20, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x64, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x20, 0x69, 0x73, 0x20, 0x35, 0x30,
	0x31, 0x39, 0x12, 0x21, 0x0a, 0x1f, 0x1a, 0x1d, 0x23, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x72, 0x70, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0xbd, 0x01, 0x7b, 0x0a, 0x20,
	0x20, 0x22, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x20, 0x31, 0x32, 0x2c, 0x0a, 0x20, 0x20, 0x22,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x22, 0x2c, 0x0a, 0x20, 0x20, 0x22, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3a,
	0x20, 0x5b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22,
	0x40, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x20, 0x35, 0x30, 0x31, 0x39, 0x0a, 0x20,
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x5d, 0x0a, 0x7d, 0x72, 0x3f, 0x0a, 0x1a, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x0b, 0xe3, 0x83, 0xa6, 0xe3, 0x83, 0xbc, 0xe3,
	0x82, 0xb6, 0x49, 0x44, 0x18, 0x01, 0x28, 0x01, 0x0a, 0x21, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x42, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x20, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x28, 0x01, 0x42, 0x39, 0x5a, 0x37, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x6a, 0x70, 0x2f, 0x74, 0x72, 0x6a, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x67, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDescOnce sync.Once
	file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDescData = file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDesc
)

func file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDescGZIP() []byte {
	file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDescOnce.Do(func() {
		file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDescData)
	})
	return file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDescData
}

var file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_goTypes = []any{
	(*CheckWaypointRequest)(nil),                     // 0: trajectory.trajectory_gcs_service.protocol.v1.CheckWaypointRequest
	(*CheckWaypointResponse)(nil),                    // 1: trajectory.trajectory_gcs_service.protocol.v1.CheckWaypointResponse
	(*CheckWaypointRequest_Waypoint)(nil),            // 2: trajectory.trajectory_gcs_service.protocol.v1.CheckWaypointRequest.Waypoint
	(*CheckWaypointResponse_Waypoint)(nil),           // 3: trajectory.trajectory_gcs_service.protocol.v1.CheckWaypointResponse.Waypoint
	(*CheckWaypointResponse_Waypoint_ResultDef)(nil), // 4: trajectory.trajectory_gcs_service.protocol.v1.CheckWaypointResponse.Waypoint.ResultDef
}
var file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_depIdxs = []int32{
	2, // 0: trajectory.trajectory_gcs_service.protocol.v1.CheckWaypointRequest.waypoints:type_name -> trajectory.trajectory_gcs_service.protocol.v1.CheckWaypointRequest.Waypoint
	3, // 1: trajectory.trajectory_gcs_service.protocol.v1.CheckWaypointResponse.waypoints:type_name -> trajectory.trajectory_gcs_service.protocol.v1.CheckWaypointResponse.Waypoint
	4, // 2: trajectory.trajectory_gcs_service.protocol.v1.CheckWaypointResponse.Waypoint.result_code:type_name -> trajectory.trajectory_gcs_service.protocol.v1.CheckWaypointResponse.Waypoint.ResultDef
	0, // 3: trajectory.trajectory_gcs_service.protocol.v1.WaypointService.CheckWaypoint:input_type -> trajectory.trajectory_gcs_service.protocol.v1.CheckWaypointRequest
	1, // 4: trajectory.trajectory_gcs_service.protocol.v1.WaypointService.CheckWaypoint:output_type -> trajectory.trajectory_gcs_service.protocol.v1.CheckWaypointResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() {
	file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_init()
}
func file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_init() {
	if File_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto != nil {
		return
	}
	file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_goTypes,
		DependencyIndexes: file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_depIdxs,
		MessageInfos:      file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_msgTypes,
	}.Build()
	File_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto = out.File
	file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_rawDesc = nil
	file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_goTypes = nil
	file_github_com_trajectoryjp_trjx_api_service_trajectory_gcs_service_protocol_v1_waypoint_service_proto_depIdxs = nil
}
