/***　Copyright © 2023-2024 Trajectory. All rights reserved. ***/

/*
 * <機能概要>
 * Uss Manager(以降UMと記載)は、
 *
 * <アクセス方法>
 * このサービスを使用するために、以下をmetadata（ヘッダー）に指定してください。
 * "x-grpc-service": "UssManager"
 * "username": システムユーザID
 * "token": アクセストークン
 */

syntax = "proto3";

package trajectory.uss_manager.protocol.v1;
option go_package = "github.com/trajectoryjp/trjx_api_service/uss";

import "trajectory/type/telemetry.proto";

// テレメトリーサービス
service TelemetryService {

    // 外部USSがテレメトリを送信する
    rpc UpdateTelemetry(stream UpdateTelemetryRequest) returns (stream UpdateTelemetryResponse);

}

// 外部USSがテレメトリを送信するリクエスト
message UpdateTelemetryRequest {
    oneof request {
        trjx_api_service.UavBasic initialize = 1;   // テレメトリ送信開始通知(TRJXのテレメトリシステムに機体を認識させる)
        Telemetry telemetry = 2;                    // テレメトリ通知(Initializeメッセージを受信するまでテレメトリは破棄する)
        trjx_api_service.UavBasic terminate = 3;    // テレメトリ送信終了通知(Terminate通知以降、テレメトリ受信は破棄する)
    }
}  

// 外部USSがテレメトリを送信するレスポンス
message UpdateTelemetryResponse {
    uint32 code = 1;                        // ステータスコード
    string message = 2;                     // メッセージ
    oneof uav {                             // 機体識別子(必須)
        string remote_id = 3;               // リモートID
        string uav_id = 4;                  // 機体ID(組織単位で一意のIDを指定)
    }
    Request request = 5;                    // リクエスト種別
    enum Request {
        INITIALIZE = 0;                     // Initialize応答
        TELEMETRY = 1;                      // Telemetry応答
        TERMINATE = 2;                      // Terinate応答
    }
}  

// テレメトリ情報メッセージ
message Telemetry {
    trjx_api_service.UavBasic uav = 1;              // テレメトリ基本情報(機体情報)
    trjx_api_service.UavPosition position = 2;      // テレメトリ位置情報
    trjx_api_service.UavAttitude attitude = 3;      // テレメトリ姿勢情報
    trjx_api_service.UavBattery battery = 4;        // テレメトリバッテリー情報
    trjx_api_service.UavStatus status = 5;          // テレメトリステータス情報
    trjx_api_service.TelemetrySource source = 6;    // テレメトリ受信経路情報
}
